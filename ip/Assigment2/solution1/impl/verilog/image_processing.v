// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

<<<<<<< HEAD
(* CORE_GENERATION_INFO="image_processing_image_processing,hls_ip_2020_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu3eg-sbva484-1-i,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.300000,HLS_SYN_LAT=921615,HLS_SYN_TPT=none,HLS_SYN_MEM=2,HLS_SYN_DSP=0,HLS_SYN_FF=971,HLS_SYN_LUT=1233,HLS_VERSION=2020_2}" *)
=======
(* CORE_GENERATION_INFO="image_processing_image_processing,hls_ip_2020_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu3eg-sbva484-1-i,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.300000,HLS_SYN_LAT=3146,HLS_SYN_TPT=none,HLS_SYN_MEM=2,HLS_SYN_DSP=0,HLS_SYN_FF=2619,HLS_SYN_LUT=3269,HLS_VERSION=2020_2}" *)
>>>>>>> cf5dd79afe81a371ef9c7f2b2ec20459fa39e383

module image_processing (
        ap_clk,
        ap_rst_n,
        m_axi_AXI_DATA_AWVALID,
        m_axi_AXI_DATA_AWREADY,
        m_axi_AXI_DATA_AWADDR,
        m_axi_AXI_DATA_AWID,
        m_axi_AXI_DATA_AWLEN,
        m_axi_AXI_DATA_AWSIZE,
        m_axi_AXI_DATA_AWBURST,
        m_axi_AXI_DATA_AWLOCK,
        m_axi_AXI_DATA_AWCACHE,
        m_axi_AXI_DATA_AWPROT,
        m_axi_AXI_DATA_AWQOS,
        m_axi_AXI_DATA_AWREGION,
        m_axi_AXI_DATA_AWUSER,
        m_axi_AXI_DATA_WVALID,
        m_axi_AXI_DATA_WREADY,
        m_axi_AXI_DATA_WDATA,
        m_axi_AXI_DATA_WSTRB,
        m_axi_AXI_DATA_WLAST,
        m_axi_AXI_DATA_WID,
        m_axi_AXI_DATA_WUSER,
        m_axi_AXI_DATA_ARVALID,
        m_axi_AXI_DATA_ARREADY,
        m_axi_AXI_DATA_ARADDR,
        m_axi_AXI_DATA_ARID,
        m_axi_AXI_DATA_ARLEN,
        m_axi_AXI_DATA_ARSIZE,
        m_axi_AXI_DATA_ARBURST,
        m_axi_AXI_DATA_ARLOCK,
        m_axi_AXI_DATA_ARCACHE,
        m_axi_AXI_DATA_ARPROT,
        m_axi_AXI_DATA_ARQOS,
        m_axi_AXI_DATA_ARREGION,
        m_axi_AXI_DATA_ARUSER,
        m_axi_AXI_DATA_RVALID,
        m_axi_AXI_DATA_RREADY,
        m_axi_AXI_DATA_RDATA,
        m_axi_AXI_DATA_RLAST,
        m_axi_AXI_DATA_RID,
        m_axi_AXI_DATA_RUSER,
        m_axi_AXI_DATA_RRESP,
        m_axi_AXI_DATA_BVALID,
        m_axi_AXI_DATA_BREADY,
        m_axi_AXI_DATA_BRESP,
        m_axi_AXI_DATA_BID,
        m_axi_AXI_DATA_BUSER,
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 14'd1;
parameter    ap_ST_fsm_state2 = 14'd2;
parameter    ap_ST_fsm_state3 = 14'd4;
parameter    ap_ST_fsm_state4 = 14'd8;
parameter    ap_ST_fsm_state5 = 14'd16;
parameter    ap_ST_fsm_state6 = 14'd32;
parameter    ap_ST_fsm_state7 = 14'd64;
parameter    ap_ST_fsm_state8 = 14'd128;
parameter    ap_ST_fsm_pp0_stage0 = 14'd256;
parameter    ap_ST_fsm_state13 = 14'd512;
parameter    ap_ST_fsm_state14 = 14'd1024;
parameter    ap_ST_fsm_state15 = 14'd2048;
parameter    ap_ST_fsm_state16 = 14'd4096;
parameter    ap_ST_fsm_state17 = 14'd8192;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 6;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_AXI_DATA_ID_WIDTH = 1;
parameter    C_M_AXI_AXI_DATA_ADDR_WIDTH = 64;
parameter    C_M_AXI_AXI_DATA_DATA_WIDTH = 32;
parameter    C_M_AXI_AXI_DATA_AWUSER_WIDTH = 1;
parameter    C_M_AXI_AXI_DATA_ARUSER_WIDTH = 1;
parameter    C_M_AXI_AXI_DATA_WUSER_WIDTH = 1;
parameter    C_M_AXI_AXI_DATA_RUSER_WIDTH = 1;
parameter    C_M_AXI_AXI_DATA_BUSER_WIDTH = 1;
parameter    C_M_AXI_AXI_DATA_USER_VALUE = 0;
parameter    C_M_AXI_AXI_DATA_PROT_VALUE = 0;
parameter    C_M_AXI_AXI_DATA_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_AXI_DATA_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output   m_axi_AXI_DATA_AWVALID;
input   m_axi_AXI_DATA_AWREADY;
output  [C_M_AXI_AXI_DATA_ADDR_WIDTH - 1:0] m_axi_AXI_DATA_AWADDR;
output  [C_M_AXI_AXI_DATA_ID_WIDTH - 1:0] m_axi_AXI_DATA_AWID;
output  [7:0] m_axi_AXI_DATA_AWLEN;
output  [2:0] m_axi_AXI_DATA_AWSIZE;
output  [1:0] m_axi_AXI_DATA_AWBURST;
output  [1:0] m_axi_AXI_DATA_AWLOCK;
output  [3:0] m_axi_AXI_DATA_AWCACHE;
output  [2:0] m_axi_AXI_DATA_AWPROT;
output  [3:0] m_axi_AXI_DATA_AWQOS;
output  [3:0] m_axi_AXI_DATA_AWREGION;
output  [C_M_AXI_AXI_DATA_AWUSER_WIDTH - 1:0] m_axi_AXI_DATA_AWUSER;
output   m_axi_AXI_DATA_WVALID;
input   m_axi_AXI_DATA_WREADY;
output  [C_M_AXI_AXI_DATA_DATA_WIDTH - 1:0] m_axi_AXI_DATA_WDATA;
output  [C_M_AXI_AXI_DATA_WSTRB_WIDTH - 1:0] m_axi_AXI_DATA_WSTRB;
output   m_axi_AXI_DATA_WLAST;
output  [C_M_AXI_AXI_DATA_ID_WIDTH - 1:0] m_axi_AXI_DATA_WID;
output  [C_M_AXI_AXI_DATA_WUSER_WIDTH - 1:0] m_axi_AXI_DATA_WUSER;
output   m_axi_AXI_DATA_ARVALID;
input   m_axi_AXI_DATA_ARREADY;
output  [C_M_AXI_AXI_DATA_ADDR_WIDTH - 1:0] m_axi_AXI_DATA_ARADDR;
output  [C_M_AXI_AXI_DATA_ID_WIDTH - 1:0] m_axi_AXI_DATA_ARID;
output  [7:0] m_axi_AXI_DATA_ARLEN;
output  [2:0] m_axi_AXI_DATA_ARSIZE;
output  [1:0] m_axi_AXI_DATA_ARBURST;
output  [1:0] m_axi_AXI_DATA_ARLOCK;
output  [3:0] m_axi_AXI_DATA_ARCACHE;
output  [2:0] m_axi_AXI_DATA_ARPROT;
output  [3:0] m_axi_AXI_DATA_ARQOS;
output  [3:0] m_axi_AXI_DATA_ARREGION;
output  [C_M_AXI_AXI_DATA_ARUSER_WIDTH - 1:0] m_axi_AXI_DATA_ARUSER;
input   m_axi_AXI_DATA_RVALID;
output   m_axi_AXI_DATA_RREADY;
input  [C_M_AXI_AXI_DATA_DATA_WIDTH - 1:0] m_axi_AXI_DATA_RDATA;
input   m_axi_AXI_DATA_RLAST;
input  [C_M_AXI_AXI_DATA_ID_WIDTH - 1:0] m_axi_AXI_DATA_RID;
input  [C_M_AXI_AXI_DATA_RUSER_WIDTH - 1:0] m_axi_AXI_DATA_RUSER;
input  [1:0] m_axi_AXI_DATA_RRESP;
input   m_axi_AXI_DATA_BVALID;
output   m_axi_AXI_DATA_BREADY;
input  [1:0] m_axi_AXI_DATA_BRESP;
input  [C_M_AXI_AXI_DATA_ID_WIDTH - 1:0] m_axi_AXI_DATA_BID;
input  [C_M_AXI_AXI_DATA_BUSER_WIDTH - 1:0] m_axi_AXI_DATA_BUSER;
input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
output   interrupt;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [13:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [63:0] in_r;
wire   [63:0] out_r;
reg    AXI_DATA_blk_n_AR;
<<<<<<< HEAD
wire    ap_CS_fsm_state2;
=======
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage1;
reg   [0:0] icmp_ln17_reg_1279;
>>>>>>> cf5dd79afe81a371ef9c7f2b2ec20459fa39e383
reg    AXI_DATA_blk_n_R;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
<<<<<<< HEAD
reg   [0:0] icmp_ln13_reg_187;
reg    AXI_DATA_blk_n_AW;
reg    AXI_DATA_blk_n_W;
reg    ap_enable_reg_pp0_iter3;
reg   [0:0] icmp_ln13_reg_187_pp0_iter2_reg;
reg    AXI_DATA_blk_n_B;
wire    ap_CS_fsm_state17;
=======
reg    AXI_DATA_blk_n_B;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_pp0_stage5;
reg   [0:0] icmp_ln17_reg_1279_pp0_iter1_reg;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_pp0_stage6;
wire    ap_CS_fsm_pp0_stage3;
reg    ap_enable_reg_pp0_iter2;
wire    ap_block_pp0_stage3;
reg   [0:0] icmp_ln17_reg_1279_pp0_iter2_reg;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4;
reg    ap_enable_reg_pp0_iter3;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2;
reg   [0:0] icmp_ln17_reg_1279_pp0_iter3_reg;
reg    ap_enable_reg_pp0_iter4;
reg   [0:0] icmp_ln17_reg_1279_pp0_iter4_reg;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_pp0_stage7;
reg    ap_enable_reg_pp0_iter5;
reg   [0:0] icmp_ln17_reg_1279_pp0_iter5_reg;
reg    ap_enable_reg_pp0_iter6;
reg   [0:0] icmp_ln17_reg_1279_pp0_iter6_reg;
reg    ap_enable_reg_pp0_iter7;
reg   [0:0] icmp_ln17_reg_1279_pp0_iter7_reg;
reg    ap_enable_reg_pp0_iter8;
reg   [0:0] icmp_ln17_reg_1279_pp0_iter8_reg;
reg    ap_enable_reg_pp0_iter9;
reg   [0:0] icmp_ln17_reg_1279_pp0_iter9_reg;
reg    ap_enable_reg_pp0_iter10;
reg   [0:0] icmp_ln17_reg_1279_pp0_iter10_reg;
reg    ap_enable_reg_pp0_iter11;
reg   [0:0] icmp_ln17_reg_1279_pp0_iter11_reg;
reg    ap_enable_reg_pp0_iter12;
reg   [0:0] icmp_ln17_reg_1279_pp0_iter12_reg;
reg    ap_enable_reg_pp0_iter13;
reg   [0:0] icmp_ln17_reg_1279_pp0_iter13_reg;
reg    ap_enable_reg_pp0_iter14;
reg   [0:0] icmp_ln17_reg_1279_pp0_iter14_reg;
reg    ap_enable_reg_pp0_iter15;
reg   [0:0] icmp_ln17_reg_1279_pp0_iter15_reg;
>>>>>>> cf5dd79afe81a371ef9c7f2b2ec20459fa39e383
reg    AXI_DATA_AWVALID;
wire    AXI_DATA_AWREADY;
reg    AXI_DATA_WVALID;
wire    AXI_DATA_WREADY;
reg    AXI_DATA_ARVALID;
wire    AXI_DATA_ARREADY;
wire    AXI_DATA_RVALID;
reg    AXI_DATA_RREADY;
wire   [7:0] AXI_DATA_RDATA;
wire    AXI_DATA_RLAST;
wire   [0:0] AXI_DATA_RID;
wire   [0:0] AXI_DATA_RUSER;
wire   [1:0] AXI_DATA_RRESP;
wire    AXI_DATA_BVALID;
reg    AXI_DATA_BREADY;
wire   [1:0] AXI_DATA_BRESP;
wire   [0:0] AXI_DATA_BID;
wire   [0:0] AXI_DATA_BUSER;
<<<<<<< HEAD
reg   [19:0] i_reg_122;
reg   [63:0] AXI_DATA_addr_reg_170;
reg   [63:0] AXI_DATA_addr_1_reg_176;
wire   [19:0] add_ln13_fu_145_p2;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state9_pp0_stage0_iter0;
reg    ap_block_state10_pp0_stage0_iter1;
wire    ap_block_state11_pp0_stage0_iter2;
wire    ap_block_state12_pp0_stage0_iter3;
=======
reg   [11:0] i_reg_404;
reg   [63:0] out_read_reg_1251;
reg   [63:0] in_read_reg_1265;
wire   [0:0] icmp_ln17_fu_416_p2;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state12_pp0_stage0_iter1;
>>>>>>> cf5dd79afe81a371ef9c7f2b2ec20459fa39e383
reg    ap_block_state12_io;
reg    ap_block_pp0_stage0_11001;
<<<<<<< HEAD
wire   [0:0] icmp_ln13_fu_151_p2;
reg   [0:0] icmp_ln13_reg_187_pp0_iter1_reg;
reg   [7:0] AXI_DATA_addr_read_reg_191;
wire   [7:0] select_ln14_fu_162_p3;
reg   [7:0] select_ln14_reg_196;
wire    ap_CS_fsm_state8;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state9;
reg    ap_enable_reg_pp0_iter2;
reg    ap_block_state2_io;
reg    ap_block_pp0_stage0_01001;
wire   [0:0] icmp_ln14_fu_157_p2;
reg   [13:0] ap_NS_fsm;
=======
wire   [13:0] shl_ln_fu_422_p3;
reg   [13:0] shl_ln_reg_1283;
reg   [13:0] shl_ln_reg_1283_pp0_iter1_reg;
reg   [13:0] shl_ln_reg_1283_pp0_iter2_reg;
reg   [13:0] shl_ln_reg_1283_pp0_iter3_reg;
reg   [13:0] shl_ln_reg_1283_pp0_iter4_reg;
reg   [13:0] shl_ln_reg_1283_pp0_iter5_reg;
reg   [13:0] shl_ln_reg_1283_pp0_iter6_reg;
reg   [13:0] shl_ln_reg_1283_pp0_iter7_reg;
reg   [13:0] shl_ln_reg_1283_pp0_iter8_reg;
reg   [13:0] shl_ln_reg_1283_pp0_iter9_reg;
reg   [13:0] shl_ln_reg_1283_pp0_iter10_reg;
reg   [13:0] shl_ln_reg_1283_pp0_iter11_reg;
reg   [13:0] shl_ln_reg_1283_pp0_iter12_reg;
reg   [13:0] shl_ln_reg_1283_pp0_iter13_reg;
reg   [63:0] AXI_DATA_addr_reg_1296;
reg   [63:0] AXI_DATA_addr_1_reg_1302;
reg   [24:0] tmp_reg_1308;
reg    ap_block_state10_pp0_stage8_iter0;
wire    ap_block_state20_pp0_stage8_iter1;
wire    ap_block_state30_pp0_stage8_iter2;
wire    ap_block_state40_pp0_stage8_iter3;
wire    ap_block_state50_pp0_stage8_iter4;
wire    ap_block_state60_pp0_stage8_iter5;
wire    ap_block_state70_pp0_stage8_iter6;
wire    ap_block_state80_pp0_stage8_iter7;
reg    ap_block_state80_io;
wire    ap_block_state90_pp0_stage8_iter8;
wire    ap_block_state100_pp0_stage8_iter9;
reg    ap_block_state110_pp0_stage8_iter10;
wire    ap_block_state120_pp0_stage8_iter11;
reg    ap_block_state120_io;
wire    ap_block_state130_pp0_stage8_iter12;
wire    ap_block_state140_pp0_stage8_iter13;
wire    ap_block_state150_pp0_stage8_iter14;
reg    ap_block_state150_io;
reg    ap_block_pp0_stage8_11001;
wire   [11:0] add_ln17_fu_494_p2;
reg   [11:0] add_ln17_reg_1313;
wire    ap_block_state11_pp0_stage9_iter0;
reg    ap_block_state11_io;
wire    ap_block_state21_pp0_stage9_iter1;
wire    ap_block_state31_pp0_stage9_iter2;
reg    ap_block_state41_pp0_stage9_iter3;
wire    ap_block_state51_pp0_stage9_iter4;
wire    ap_block_state61_pp0_stage9_iter5;
wire    ap_block_state71_pp0_stage9_iter6;
wire    ap_block_state81_pp0_stage9_iter7;
wire    ap_block_state91_pp0_stage9_iter8;
wire    ap_block_state101_pp0_stage9_iter9;
wire    ap_block_state111_pp0_stage9_iter10;
reg    ap_block_state111_io;
wire    ap_block_state121_pp0_stage9_iter11;
wire    ap_block_state131_pp0_stage9_iter12;
reg    ap_block_state141_pp0_stage9_iter13;
wire    ap_block_state151_pp0_stage9_iter14;
reg    ap_block_state151_io;
reg    ap_block_pp0_stage9_11001;
wire   [31:0] select_ln20_fu_505_p3;
reg   [31:0] select_ln20_reg_1318;
reg   [63:0] AXI_DATA_addr_2_reg_1323;
wire    ap_block_state7_pp0_stage5_iter0;
reg    ap_block_state17_pp0_stage5_iter1;
wire    ap_block_state27_pp0_stage5_iter2;
reg    ap_block_state27_io;
wire    ap_block_state37_pp0_stage5_iter3;
wire    ap_block_state47_pp0_stage5_iter4;
wire    ap_block_state57_pp0_stage5_iter5;
reg    ap_block_state57_io;
wire    ap_block_state67_pp0_stage5_iter6;
wire    ap_block_state77_pp0_stage5_iter7;
reg    ap_block_state87_pp0_stage5_iter8;
wire    ap_block_state97_pp0_stage5_iter9;
wire    ap_block_state107_pp0_stage5_iter10;
wire    ap_block_state117_pp0_stage5_iter11;
wire    ap_block_state127_pp0_stage5_iter12;
reg    ap_block_state127_io;
wire    ap_block_state137_pp0_stage5_iter13;
wire    ap_block_state147_pp0_stage5_iter14;
reg    ap_block_pp0_stage5_11001;
reg   [63:0] AXI_DATA_addr_3_reg_1329;
reg   [24:0] tmp_1_reg_1335;
wire    ap_block_state5_pp0_stage3_iter0;
wire    ap_block_state15_pp0_stage3_iter1;
reg    ap_block_state25_pp0_stage3_iter2;
wire    ap_block_state35_pp0_stage3_iter3;
wire    ap_block_state45_pp0_stage3_iter4;
wire    ap_block_state55_pp0_stage3_iter5;
wire    ap_block_state65_pp0_stage3_iter6;
reg    ap_block_state65_io;
wire    ap_block_state75_pp0_stage3_iter7;
wire    ap_block_state85_pp0_stage3_iter8;
wire    ap_block_state95_pp0_stage3_iter9;
wire    ap_block_state105_pp0_stage3_iter10;
reg    ap_block_state105_io;
wire    ap_block_state115_pp0_stage3_iter11;
reg    ap_block_state125_pp0_stage3_iter12;
wire    ap_block_state135_pp0_stage3_iter13;
reg    ap_block_state135_io;
wire    ap_block_state145_pp0_stage3_iter14;
wire    ap_block_state155_pp0_stage3_iter15;
reg    ap_block_pp0_stage3_11001;
wire   [31:0] select_ln20_1_fu_587_p3;
reg   [31:0] select_ln20_1_reg_1340;
wire    ap_block_state6_pp0_stage4_iter0;
wire    ap_block_state16_pp0_stage4_iter1;
wire    ap_block_state26_pp0_stage4_iter2;
reg    ap_block_state26_io;
wire    ap_block_state36_pp0_stage4_iter3;
wire    ap_block_state46_pp0_stage4_iter4;
reg    ap_block_state56_pp0_stage4_iter5;
wire    ap_block_state66_pp0_stage4_iter6;
wire    ap_block_state76_pp0_stage4_iter7;
wire    ap_block_state86_pp0_stage4_iter8;
wire    ap_block_state96_pp0_stage4_iter9;
reg    ap_block_state96_io;
wire    ap_block_state106_pp0_stage4_iter10;
wire    ap_block_state116_pp0_stage4_iter11;
wire    ap_block_state126_pp0_stage4_iter12;
wire    ap_block_state136_pp0_stage4_iter13;
reg    ap_block_state136_io;
wire    ap_block_state146_pp0_stage4_iter14;
reg    ap_block_state156_pp0_stage4_iter15;
reg    ap_block_pp0_stage4_11001;
reg   [63:0] AXI_DATA_addr_4_reg_1345;
wire    ap_block_state3_pp0_stage1_iter0;
reg    ap_block_state3_io;
wire    ap_block_state13_pp0_stage1_iter1;
wire    ap_block_state23_pp0_stage1_iter2;
wire    ap_block_state33_pp0_stage1_iter3;
wire    ap_block_state43_pp0_stage1_iter4;
reg    ap_block_state43_io;
wire    ap_block_state53_pp0_stage1_iter5;
reg    ap_block_state63_pp0_stage1_iter6;
wire    ap_block_state73_pp0_stage1_iter7;
reg    ap_block_state73_io;
wire    ap_block_state83_pp0_stage1_iter8;
wire    ap_block_state93_pp0_stage1_iter9;
reg    ap_block_state103_pp0_stage1_iter10;
wire    ap_block_state113_pp0_stage1_iter11;
wire    ap_block_state123_pp0_stage1_iter12;
wire    ap_block_state133_pp0_stage1_iter13;
wire    ap_block_state143_pp0_stage1_iter14;
wire    ap_block_state153_pp0_stage1_iter15;
reg    ap_block_pp0_stage1_11001;
reg   [63:0] AXI_DATA_addr_5_reg_1351;
reg   [24:0] tmp_2_reg_1357;
wire   [31:0] select_ln20_2_fu_669_p3;
reg   [31:0] select_ln20_2_reg_1362;
reg   [63:0] AXI_DATA_addr_6_reg_1367;
wire    ap_block_state8_pp0_stage6_iter0;
wire    ap_block_state18_pp0_stage6_iter1;
reg    ap_block_state18_io;
wire    ap_block_state28_pp0_stage6_iter2;
wire    ap_block_state38_pp0_stage6_iter3;
reg    ap_block_state48_pp0_stage6_iter4;
wire    ap_block_state58_pp0_stage6_iter5;
reg    ap_block_state58_io;
wire    ap_block_state68_pp0_stage6_iter6;
wire    ap_block_state78_pp0_stage6_iter7;
wire    ap_block_state88_pp0_stage6_iter8;
reg    ap_block_state88_io;
wire    ap_block_state98_pp0_stage6_iter9;
wire    ap_block_state108_pp0_stage6_iter10;
reg    ap_block_state118_pp0_stage6_iter11;
wire    ap_block_state128_pp0_stage6_iter12;
wire    ap_block_state138_pp0_stage6_iter13;
wire    ap_block_state148_pp0_stage6_iter14;
reg    ap_block_pp0_stage6_11001;
reg   [63:0] AXI_DATA_addr_7_reg_1373;
reg   [24:0] tmp_3_reg_1379;
wire   [31:0] select_ln20_3_fu_751_p3;
reg   [31:0] select_ln20_3_reg_1384;
reg   [63:0] AXI_DATA_addr_8_reg_1389;
wire    ap_block_state4_pp0_stage2_iter0;
wire    ap_block_state14_pp0_stage2_iter1;
wire    ap_block_state24_pp0_stage2_iter2;
wire    ap_block_state34_pp0_stage2_iter3;
reg    ap_block_state34_io;
wire    ap_block_state44_pp0_stage2_iter4;
wire    ap_block_state54_pp0_stage2_iter5;
wire    ap_block_state64_pp0_stage2_iter6;
wire    ap_block_state74_pp0_stage2_iter7;
reg    ap_block_state74_io;
wire    ap_block_state84_pp0_stage2_iter8;
reg    ap_block_state94_pp0_stage2_iter9;
wire    ap_block_state104_pp0_stage2_iter10;
reg    ap_block_state104_io;
wire    ap_block_state114_pp0_stage2_iter11;
wire    ap_block_state124_pp0_stage2_iter12;
reg    ap_block_state134_pp0_stage2_iter13;
wire    ap_block_state144_pp0_stage2_iter14;
wire    ap_block_state154_pp0_stage2_iter15;
reg    ap_block_pp0_stage2_11001;
reg   [63:0] AXI_DATA_addr_9_reg_1395;
reg   [24:0] tmp_4_reg_1401;
wire   [31:0] select_ln20_4_fu_833_p3;
reg   [31:0] select_ln20_4_reg_1406;
reg   [63:0] AXI_DATA_addr_10_reg_1411;
wire    ap_block_state9_pp0_stage7_iter0;
wire    ap_block_state19_pp0_stage7_iter1;
wire    ap_block_state29_pp0_stage7_iter2;
wire    ap_block_state39_pp0_stage7_iter3;
wire    ap_block_state49_pp0_stage7_iter4;
reg    ap_block_state49_io;
wire    ap_block_state59_pp0_stage7_iter5;
wire    ap_block_state69_pp0_stage7_iter6;
reg    ap_block_state79_pp0_stage7_iter7;
wire    ap_block_state89_pp0_stage7_iter8;
reg    ap_block_state89_io;
wire    ap_block_state99_pp0_stage7_iter9;
wire    ap_block_state109_pp0_stage7_iter10;
wire    ap_block_state119_pp0_stage7_iter11;
reg    ap_block_state119_io;
wire    ap_block_state129_pp0_stage7_iter12;
wire    ap_block_state139_pp0_stage7_iter13;
reg    ap_block_state149_pp0_stage7_iter14;
reg    ap_block_pp0_stage7_11001;
reg   [63:0] AXI_DATA_addr_11_reg_1417;
reg   [24:0] tmp_5_reg_1423;
wire   [31:0] select_ln20_5_fu_915_p3;
reg   [31:0] select_ln20_5_reg_1428;
reg   [63:0] AXI_DATA_addr_12_reg_1433;
reg   [63:0] AXI_DATA_addr_13_reg_1439;
reg   [24:0] tmp_6_reg_1445;
wire   [31:0] select_ln20_6_fu_997_p3;
reg   [31:0] select_ln20_6_reg_1450;
reg   [63:0] AXI_DATA_addr_14_reg_1455;
reg   [63:0] AXI_DATA_addr_15_reg_1461;
reg   [24:0] tmp_7_reg_1467;
wire   [31:0] select_ln20_7_fu_1079_p3;
reg   [31:0] select_ln20_7_reg_1472;
reg   [63:0] AXI_DATA_addr_16_reg_1477;
reg   [63:0] AXI_DATA_addr_17_reg_1483;
reg   [24:0] tmp_8_reg_1489;
wire   [31:0] select_ln20_8_fu_1161_p3;
reg   [31:0] select_ln20_8_reg_1494;
reg   [63:0] AXI_DATA_addr_18_reg_1499;
reg   [63:0] AXI_DATA_addr_19_reg_1505;
reg   [24:0] tmp_9_reg_1511;
wire   [31:0] select_ln20_9_fu_1243_p3;
reg   [31:0] select_ln20_9_reg_1516;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_block_pp0_stage9_subdone;
reg    ap_block_pp0_stage4_subdone;
reg   [11:0] ap_phi_mux_i_phi_fu_408_p4;
wire  signed [63:0] sext_ln19_fu_449_p1;
wire  signed [63:0] sext_ln20_fu_474_p1;
wire  signed [63:0] sext_ln19_1_fu_537_p1;
wire  signed [63:0] sext_ln20_1_fu_562_p1;
wire  signed [63:0] sext_ln19_2_fu_619_p1;
wire  signed [63:0] sext_ln20_2_fu_644_p1;
wire  signed [63:0] sext_ln19_3_fu_701_p1;
wire  signed [63:0] sext_ln20_3_fu_726_p1;
wire  signed [63:0] sext_ln19_4_fu_783_p1;
wire  signed [63:0] sext_ln20_4_fu_808_p1;
wire  signed [63:0] sext_ln19_5_fu_865_p1;
wire  signed [63:0] sext_ln20_5_fu_890_p1;
wire  signed [63:0] sext_ln19_6_fu_947_p1;
wire  signed [63:0] sext_ln20_6_fu_972_p1;
wire  signed [63:0] sext_ln19_7_fu_1029_p1;
wire  signed [63:0] sext_ln20_7_fu_1054_p1;
wire  signed [63:0] sext_ln19_8_fu_1111_p1;
wire  signed [63:0] sext_ln20_8_fu_1136_p1;
wire  signed [63:0] sext_ln19_9_fu_1193_p1;
wire  signed [63:0] sext_ln20_9_fu_1218_p1;
reg    ap_block_pp0_stage0_01001;
reg    ap_block_pp0_stage5_01001;
reg    ap_block_pp0_stage1_01001;
reg    ap_block_pp0_stage6_01001;
reg    ap_block_pp0_stage2_01001;
reg    ap_block_pp0_stage7_01001;
reg    ap_block_pp0_stage3_01001;
reg    ap_block_pp0_stage8_01001;
reg    ap_block_pp0_stage4_01001;
reg    ap_block_pp0_stage9_01001;
wire   [63:0] zext_ln19_fu_430_p1;
wire   [63:0] add_ln19_fu_434_p2;
wire   [61:0] trunc_ln_fu_439_p4;
wire   [63:0] empty_17_fu_459_p2;
wire   [61:0] trunc_ln1_fu_464_p4;
wire   [0:0] icmp_ln19_fu_500_p2;
wire   [13:0] or_ln19_fu_513_p2;
wire   [63:0] zext_ln19_1_fu_518_p1;
wire   [63:0] add_ln19_1_fu_522_p2;
wire   [61:0] trunc_ln19_1_fu_527_p4;
wire   [63:0] empty_18_fu_547_p2;
wire   [61:0] trunc_ln20_1_fu_552_p4;
wire   [0:0] icmp_ln19_1_fu_582_p2;
wire   [13:0] add_ln19_2_fu_595_p2;
wire   [63:0] zext_ln19_2_fu_600_p1;
wire   [63:0] add_ln19_3_fu_604_p2;
wire   [61:0] trunc_ln19_2_fu_609_p4;
wire   [63:0] empty_19_fu_629_p2;
wire   [61:0] trunc_ln20_2_fu_634_p4;
wire   [0:0] icmp_ln19_2_fu_664_p2;
wire   [13:0] add_ln19_4_fu_677_p2;
wire   [63:0] zext_ln19_3_fu_682_p1;
wire   [63:0] add_ln19_5_fu_686_p2;
wire   [61:0] trunc_ln19_3_fu_691_p4;
wire   [63:0] empty_20_fu_711_p2;
wire   [61:0] trunc_ln20_3_fu_716_p4;
wire   [0:0] icmp_ln19_3_fu_746_p2;
wire   [13:0] add_ln19_6_fu_759_p2;
wire   [63:0] zext_ln19_4_fu_764_p1;
wire   [63:0] add_ln19_7_fu_768_p2;
wire   [61:0] trunc_ln19_4_fu_773_p4;
wire   [63:0] empty_21_fu_793_p2;
wire   [61:0] trunc_ln20_4_fu_798_p4;
wire   [0:0] icmp_ln19_4_fu_828_p2;
wire   [13:0] add_ln19_8_fu_841_p2;
wire   [63:0] zext_ln19_5_fu_846_p1;
wire   [63:0] add_ln19_9_fu_850_p2;
wire   [61:0] trunc_ln19_5_fu_855_p4;
wire   [63:0] empty_22_fu_875_p2;
wire   [61:0] trunc_ln20_5_fu_880_p4;
wire   [0:0] icmp_ln19_5_fu_910_p2;
wire   [13:0] add_ln19_10_fu_923_p2;
wire   [63:0] zext_ln19_6_fu_928_p1;
wire   [63:0] add_ln19_11_fu_932_p2;
wire   [61:0] trunc_ln19_6_fu_937_p4;
wire   [63:0] empty_23_fu_957_p2;
wire   [61:0] trunc_ln20_6_fu_962_p4;
wire   [0:0] icmp_ln19_6_fu_992_p2;
wire   [13:0] add_ln19_12_fu_1005_p2;
wire   [63:0] zext_ln19_7_fu_1010_p1;
wire   [63:0] add_ln19_13_fu_1014_p2;
wire   [61:0] trunc_ln19_7_fu_1019_p4;
wire   [63:0] empty_24_fu_1039_p2;
wire   [61:0] trunc_ln20_7_fu_1044_p4;
wire   [0:0] icmp_ln19_7_fu_1074_p2;
wire   [13:0] add_ln19_14_fu_1087_p2;
wire   [63:0] zext_ln19_8_fu_1092_p1;
wire   [63:0] add_ln19_15_fu_1096_p2;
wire   [61:0] trunc_ln19_8_fu_1101_p4;
wire   [63:0] empty_25_fu_1121_p2;
wire   [61:0] trunc_ln20_8_fu_1126_p4;
wire   [0:0] icmp_ln19_8_fu_1156_p2;
wire   [13:0] add_ln19_16_fu_1169_p2;
wire   [63:0] zext_ln19_9_fu_1174_p1;
wire   [63:0] add_ln19_17_fu_1178_p2;
wire   [61:0] trunc_ln19_9_fu_1183_p4;
wire   [63:0] empty_26_fu_1203_p2;
wire   [61:0] trunc_ln20_9_fu_1208_p4;
wire   [0:0] icmp_ln19_9_fu_1238_p2;
wire    ap_CS_fsm_state157;
reg   [11:0] ap_NS_fsm;
reg    ap_block_pp0_stage1_subdone;
reg    ap_block_pp0_stage2_subdone;
reg    ap_block_pp0_stage3_subdone;
reg    ap_block_pp0_stage5_subdone;
reg    ap_block_pp0_stage6_subdone;
reg    ap_block_pp0_stage7_subdone;
reg    ap_block_pp0_stage8_subdone;
>>>>>>> cf5dd79afe81a371ef9c7f2b2ec20459fa39e383
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 14'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
end

image_processing_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .in_r(in_r),
    .out_r(out_r),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

image_processing_AXI_DATA_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 8 ),
    .USER_AW( 64 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_AXI_DATA_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_AXI_DATA_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_AXI_DATA_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_AXI_DATA_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_AXI_DATA_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_AXI_DATA_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_AXI_DATA_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_AXI_DATA_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_AXI_DATA_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_AXI_DATA_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_AXI_DATA_CACHE_VALUE ))
AXI_DATA_m_axi_U(
    .AWVALID(m_axi_AXI_DATA_AWVALID),
    .AWREADY(m_axi_AXI_DATA_AWREADY),
    .AWADDR(m_axi_AXI_DATA_AWADDR),
    .AWID(m_axi_AXI_DATA_AWID),
    .AWLEN(m_axi_AXI_DATA_AWLEN),
    .AWSIZE(m_axi_AXI_DATA_AWSIZE),
    .AWBURST(m_axi_AXI_DATA_AWBURST),
    .AWLOCK(m_axi_AXI_DATA_AWLOCK),
    .AWCACHE(m_axi_AXI_DATA_AWCACHE),
    .AWPROT(m_axi_AXI_DATA_AWPROT),
    .AWQOS(m_axi_AXI_DATA_AWQOS),
    .AWREGION(m_axi_AXI_DATA_AWREGION),
    .AWUSER(m_axi_AXI_DATA_AWUSER),
    .WVALID(m_axi_AXI_DATA_WVALID),
    .WREADY(m_axi_AXI_DATA_WREADY),
    .WDATA(m_axi_AXI_DATA_WDATA),
    .WSTRB(m_axi_AXI_DATA_WSTRB),
    .WLAST(m_axi_AXI_DATA_WLAST),
    .WID(m_axi_AXI_DATA_WID),
    .WUSER(m_axi_AXI_DATA_WUSER),
    .ARVALID(m_axi_AXI_DATA_ARVALID),
    .ARREADY(m_axi_AXI_DATA_ARREADY),
    .ARADDR(m_axi_AXI_DATA_ARADDR),
    .ARID(m_axi_AXI_DATA_ARID),
    .ARLEN(m_axi_AXI_DATA_ARLEN),
    .ARSIZE(m_axi_AXI_DATA_ARSIZE),
    .ARBURST(m_axi_AXI_DATA_ARBURST),
    .ARLOCK(m_axi_AXI_DATA_ARLOCK),
    .ARCACHE(m_axi_AXI_DATA_ARCACHE),
    .ARPROT(m_axi_AXI_DATA_ARPROT),
    .ARQOS(m_axi_AXI_DATA_ARQOS),
    .ARREGION(m_axi_AXI_DATA_ARREGION),
    .ARUSER(m_axi_AXI_DATA_ARUSER),
    .RVALID(m_axi_AXI_DATA_RVALID),
    .RREADY(m_axi_AXI_DATA_RREADY),
    .RDATA(m_axi_AXI_DATA_RDATA),
    .RLAST(m_axi_AXI_DATA_RLAST),
    .RID(m_axi_AXI_DATA_RID),
    .RUSER(m_axi_AXI_DATA_RUSER),
    .RRESP(m_axi_AXI_DATA_RRESP),
    .BVALID(m_axi_AXI_DATA_BVALID),
    .BREADY(m_axi_AXI_DATA_BREADY),
    .BRESP(m_axi_AXI_DATA_BRESP),
    .BID(m_axi_AXI_DATA_BID),
    .BUSER(m_axi_AXI_DATA_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(AXI_DATA_ARVALID),
    .I_ARREADY(AXI_DATA_ARREADY),
    .I_ARADDR(AXI_DATA_addr_reg_170),
    .I_ARID(1'd0),
    .I_ARLEN(32'd921600),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(AXI_DATA_RVALID),
    .I_RREADY(AXI_DATA_RREADY),
    .I_RDATA(AXI_DATA_RDATA),
    .I_RID(AXI_DATA_RID),
    .I_RUSER(AXI_DATA_RUSER),
    .I_RRESP(AXI_DATA_RRESP),
    .I_RLAST(AXI_DATA_RLAST),
    .I_AWVALID(AXI_DATA_AWVALID),
    .I_AWREADY(AXI_DATA_AWREADY),
    .I_AWADDR(AXI_DATA_addr_1_reg_176),
    .I_AWID(1'd0),
    .I_AWLEN(32'd921600),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(AXI_DATA_WVALID),
    .I_WREADY(AXI_DATA_WREADY),
    .I_WDATA(select_ln14_reg_196),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(1'd1),
    .I_BVALID(AXI_DATA_BVALID),
    .I_BREADY(AXI_DATA_BREADY),
    .I_BRESP(AXI_DATA_BRESP),
    .I_BID(AXI_DATA_BID),
    .I_BUSER(AXI_DATA_BUSER)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state9) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state8)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state9)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state9);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end else if ((1'b1 == ap_CS_fsm_state8)) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
<<<<<<< HEAD
    if (((icmp_ln13_fu_151_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_reg_122 <= add_ln13_fu_145_p2;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        i_reg_122 <= 20'd0;
=======
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage9_subdone) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage9_subdone) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage9_subdone) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage9_subdone) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage9_subdone) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage9_subdone) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i_reg_404 <= 12'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln17_reg_1279 == 1'd1))) begin
        i_reg_404 <= add_ln17_reg_1313;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln17_reg_1279_pp0_iter7_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        AXI_DATA_addr_10_reg_1411 <= sext_ln19_5_fu_865_p1;
        AXI_DATA_addr_11_reg_1417 <= sext_ln20_5_fu_890_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln17_reg_1279_pp0_iter9_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        AXI_DATA_addr_12_reg_1433 <= sext_ln19_6_fu_947_p1;
        AXI_DATA_addr_13_reg_1439 <= sext_ln20_6_fu_972_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (icmp_ln17_reg_1279_pp0_iter10_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        AXI_DATA_addr_14_reg_1455 <= sext_ln19_7_fu_1029_p1;
        AXI_DATA_addr_15_reg_1461 <= sext_ln20_7_fu_1054_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln17_reg_1279_pp0_iter12_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        AXI_DATA_addr_16_reg_1477 <= sext_ln19_8_fu_1111_p1;
        AXI_DATA_addr_17_reg_1483 <= sext_ln20_8_fu_1136_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage9_11001) & (icmp_ln17_reg_1279_pp0_iter13_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        AXI_DATA_addr_18_reg_1499 <= sext_ln19_9_fu_1193_p1;
        AXI_DATA_addr_19_reg_1505 <= sext_ln20_9_fu_1218_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln17_fu_416_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        AXI_DATA_addr_1_reg_1302 <= sext_ln20_fu_474_p1;
        AXI_DATA_addr_reg_1296 <= sext_ln19_fu_449_p1;
        shl_ln_reg_1283[13 : 2] <= shl_ln_fu_422_p3[13 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (icmp_ln17_reg_1279_pp0_iter1_reg == 1'd1))) begin
        AXI_DATA_addr_2_reg_1323 <= sext_ln19_1_fu_537_p1;
        AXI_DATA_addr_3_reg_1329 <= sext_ln20_1_fu_562_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln17_reg_1279_pp0_iter3_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        AXI_DATA_addr_4_reg_1345 <= sext_ln19_2_fu_619_p1;
        AXI_DATA_addr_5_reg_1351 <= sext_ln20_2_fu_644_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (icmp_ln17_reg_1279_pp0_iter4_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        AXI_DATA_addr_6_reg_1367 <= sext_ln19_3_fu_701_p1;
        AXI_DATA_addr_7_reg_1373 <= sext_ln20_3_fu_726_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln17_reg_1279_pp0_iter6_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        AXI_DATA_addr_8_reg_1389 <= sext_ln19_4_fu_783_p1;
        AXI_DATA_addr_9_reg_1395 <= sext_ln20_4_fu_808_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (icmp_ln17_reg_1279 == 1'd1))) begin
        add_ln17_reg_1313 <= add_ln17_fu_494_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln17_reg_1279 <= icmp_ln17_fu_416_p2;
        icmp_ln17_reg_1279_pp0_iter10_reg <= icmp_ln17_reg_1279_pp0_iter9_reg;
        icmp_ln17_reg_1279_pp0_iter11_reg <= icmp_ln17_reg_1279_pp0_iter10_reg;
        icmp_ln17_reg_1279_pp0_iter12_reg <= icmp_ln17_reg_1279_pp0_iter11_reg;
        icmp_ln17_reg_1279_pp0_iter13_reg <= icmp_ln17_reg_1279_pp0_iter12_reg;
        icmp_ln17_reg_1279_pp0_iter14_reg <= icmp_ln17_reg_1279_pp0_iter13_reg;
        icmp_ln17_reg_1279_pp0_iter15_reg <= icmp_ln17_reg_1279_pp0_iter14_reg;
        icmp_ln17_reg_1279_pp0_iter1_reg <= icmp_ln17_reg_1279;
        icmp_ln17_reg_1279_pp0_iter2_reg <= icmp_ln17_reg_1279_pp0_iter1_reg;
        icmp_ln17_reg_1279_pp0_iter3_reg <= icmp_ln17_reg_1279_pp0_iter2_reg;
        icmp_ln17_reg_1279_pp0_iter4_reg <= icmp_ln17_reg_1279_pp0_iter3_reg;
        icmp_ln17_reg_1279_pp0_iter5_reg <= icmp_ln17_reg_1279_pp0_iter4_reg;
        icmp_ln17_reg_1279_pp0_iter6_reg <= icmp_ln17_reg_1279_pp0_iter5_reg;
        icmp_ln17_reg_1279_pp0_iter7_reg <= icmp_ln17_reg_1279_pp0_iter6_reg;
        icmp_ln17_reg_1279_pp0_iter8_reg <= icmp_ln17_reg_1279_pp0_iter7_reg;
        icmp_ln17_reg_1279_pp0_iter9_reg <= icmp_ln17_reg_1279_pp0_iter8_reg;
        shl_ln_reg_1283_pp0_iter10_reg[13 : 2] <= shl_ln_reg_1283_pp0_iter9_reg[13 : 2];
        shl_ln_reg_1283_pp0_iter11_reg[13 : 2] <= shl_ln_reg_1283_pp0_iter10_reg[13 : 2];
        shl_ln_reg_1283_pp0_iter12_reg[13 : 2] <= shl_ln_reg_1283_pp0_iter11_reg[13 : 2];
        shl_ln_reg_1283_pp0_iter13_reg[13 : 2] <= shl_ln_reg_1283_pp0_iter12_reg[13 : 2];
        shl_ln_reg_1283_pp0_iter1_reg[13 : 2] <= shl_ln_reg_1283[13 : 2];
        shl_ln_reg_1283_pp0_iter2_reg[13 : 2] <= shl_ln_reg_1283_pp0_iter1_reg[13 : 2];
        shl_ln_reg_1283_pp0_iter3_reg[13 : 2] <= shl_ln_reg_1283_pp0_iter2_reg[13 : 2];
        shl_ln_reg_1283_pp0_iter4_reg[13 : 2] <= shl_ln_reg_1283_pp0_iter3_reg[13 : 2];
        shl_ln_reg_1283_pp0_iter5_reg[13 : 2] <= shl_ln_reg_1283_pp0_iter4_reg[13 : 2];
        shl_ln_reg_1283_pp0_iter6_reg[13 : 2] <= shl_ln_reg_1283_pp0_iter5_reg[13 : 2];
        shl_ln_reg_1283_pp0_iter7_reg[13 : 2] <= shl_ln_reg_1283_pp0_iter6_reg[13 : 2];
        shl_ln_reg_1283_pp0_iter8_reg[13 : 2] <= shl_ln_reg_1283_pp0_iter7_reg[13 : 2];
        shl_ln_reg_1283_pp0_iter9_reg[13 : 2] <= shl_ln_reg_1283_pp0_iter8_reg[13 : 2];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        in_read_reg_1265 <= in_r;
        out_read_reg_1251 <= out_r;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln17_reg_1279_pp0_iter2_reg == 1'd1))) begin
        select_ln20_1_reg_1340[7 : 0] <= select_ln20_1_fu_587_p3[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln17_reg_1279_pp0_iter3_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        select_ln20_2_reg_1362[7 : 0] <= select_ln20_2_fu_669_p3[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (icmp_ln17_reg_1279_pp0_iter5_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        select_ln20_3_reg_1384[7 : 0] <= select_ln20_3_fu_751_p3[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln17_reg_1279_pp0_iter7_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        select_ln20_4_reg_1406[7 : 0] <= select_ln20_4_fu_833_p3[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (icmp_ln17_reg_1279_pp0_iter8_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        select_ln20_5_reg_1428[7 : 0] <= select_ln20_5_fu_915_p3[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln17_reg_1279_pp0_iter10_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        select_ln20_6_reg_1450[7 : 0] <= select_ln20_6_fu_997_p3[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln17_reg_1279_pp0_iter11_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        select_ln20_7_reg_1472[7 : 0] <= select_ln20_7_fu_1079_p3[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln17_reg_1279_pp0_iter13_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        select_ln20_8_reg_1494[7 : 0] <= select_ln20_8_fu_1161_p3[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (icmp_ln17_reg_1279_pp0_iter14_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        select_ln20_9_reg_1516[7 : 0] <= select_ln20_9_fu_1243_p3[7 : 0];
>>>>>>> cf5dd79afe81a371ef9c7f2b2ec20459fa39e383
    end
end

always @ (posedge ap_clk) begin
<<<<<<< HEAD
    if ((1'b1 == ap_CS_fsm_state1)) begin
        AXI_DATA_addr_1_reg_176 <= out_r;
        AXI_DATA_addr_reg_170 <= in_r;
=======
    if (((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9) & (icmp_ln17_reg_1279 == 1'd1))) begin
        select_ln20_reg_1318[7 : 0] <= select_ln20_fu_505_p3[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln17_reg_1279_pp0_iter2_reg == 1'd1))) begin
        tmp_1_reg_1335 <= {{AXI_DATA_RDATA[31:7]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage9_11001) & (icmp_ln17_reg_1279_pp0_iter3_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        tmp_2_reg_1357 <= {{AXI_DATA_RDATA[31:7]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln17_reg_1279_pp0_iter5_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        tmp_3_reg_1379 <= {{AXI_DATA_RDATA[31:7]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln17_reg_1279_pp0_iter6_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_4_reg_1401 <= {{AXI_DATA_RDATA[31:7]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (icmp_ln17_reg_1279_pp0_iter8_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        tmp_5_reg_1423 <= {{AXI_DATA_RDATA[31:7]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln17_reg_1279_pp0_iter10_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_6_reg_1445 <= {{AXI_DATA_RDATA[31:7]}};
>>>>>>> cf5dd79afe81a371ef9c7f2b2ec20459fa39e383
    end
end

always @ (posedge ap_clk) begin
<<<<<<< HEAD
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln13_reg_187 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        AXI_DATA_addr_read_reg_191 <= AXI_DATA_RDATA;
=======
    if (((1'b0 == ap_block_pp0_stage6_11001) & (icmp_ln17_reg_1279_pp0_iter11_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        tmp_7_reg_1467 <= {{AXI_DATA_RDATA[31:7]}};
>>>>>>> cf5dd79afe81a371ef9c7f2b2ec20459fa39e383
    end
end

always @ (posedge ap_clk) begin
<<<<<<< HEAD
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln13_reg_187 <= icmp_ln13_fu_151_p2;
        icmp_ln13_reg_187_pp0_iter1_reg <= icmp_ln13_reg_187;
=======
    if (((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln17_reg_1279_pp0_iter13_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        tmp_8_reg_1489 <= {{AXI_DATA_RDATA[31:7]}};
>>>>>>> cf5dd79afe81a371ef9c7f2b2ec20459fa39e383
    end
end

always @ (posedge ap_clk) begin
<<<<<<< HEAD
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        icmp_ln13_reg_187_pp0_iter2_reg <= icmp_ln13_reg_187_pp0_iter1_reg;
=======
    if (((1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln17_reg_1279_pp0_iter14_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        tmp_9_reg_1511 <= {{AXI_DATA_RDATA[31:7]}};
>>>>>>> cf5dd79afe81a371ef9c7f2b2ec20459fa39e383
    end
end

always @ (posedge ap_clk) begin
<<<<<<< HEAD
    if (((icmp_ln13_reg_187_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        select_ln14_reg_196 <= select_ln14_fu_162_p3;
=======
    if (((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (icmp_ln17_reg_1279 == 1'd1))) begin
        tmp_reg_1308 <= {{AXI_DATA_RDATA[31:7]}};
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter14 == 1'b1) & (icmp_ln17_reg_1279_pp0_iter13_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        AXI_DATA_ARADDR = AXI_DATA_addr_18_reg_1499;
    end else if (((1'b0 == ap_block_pp0_stage5_11001) & (icmp_ln17_reg_1279_pp0_iter12_reg == 1'd1) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        AXI_DATA_ARADDR = AXI_DATA_addr_16_reg_1477;
    end else if (((1'b0 == ap_block_pp0_stage9_11001) & (icmp_ln17_reg_1279_pp0_iter10_reg == 1'd1) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        AXI_DATA_ARADDR = AXI_DATA_addr_14_reg_1455;
    end else if (((1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln17_reg_1279_pp0_iter9_reg == 1'd1) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        AXI_DATA_ARADDR = AXI_DATA_addr_12_reg_1433;
    end else if (((1'b0 == ap_block_pp0_stage8_11001) & (icmp_ln17_reg_1279_pp0_iter7_reg == 1'd1) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        AXI_DATA_ARADDR = AXI_DATA_addr_10_reg_1411;
    end else if (((1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln17_reg_1279_pp0_iter6_reg == 1'd1) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        AXI_DATA_ARADDR = AXI_DATA_addr_8_reg_1389;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln17_reg_1279_pp0_iter4_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        AXI_DATA_ARADDR = AXI_DATA_addr_6_reg_1367;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln17_reg_1279_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        AXI_DATA_ARADDR = AXI_DATA_addr_4_reg_1345;
    end else if (((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6) & (icmp_ln17_reg_1279_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        AXI_DATA_ARADDR = AXI_DATA_addr_2_reg_1323;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln17_reg_1279 == 1'd1))) begin
        AXI_DATA_ARADDR = AXI_DATA_addr_reg_1296;
    end else begin
        AXI_DATA_ARADDR = 'bx;
>>>>>>> cf5dd79afe81a371ef9c7f2b2ec20459fa39e383
    end
end

always @ (*) begin
<<<<<<< HEAD
    if (((1'b1 == ap_CS_fsm_state2) & (1'b0 == ap_block_state2_io))) begin
=======
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln17_reg_1279_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6) & (icmp_ln17_reg_1279_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln17_reg_1279 == 1'd1)) | ((1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln17_reg_1279_pp0_iter9_reg == 1'd1) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln17_reg_1279_pp0_iter6_reg == 1'd1) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage5_11001) & (icmp_ln17_reg_1279_pp0_iter12_reg == 1'd1) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage9_11001) & (icmp_ln17_reg_1279_pp0_iter10_reg == 1'd1) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_11001) & (icmp_ln17_reg_1279_pp0_iter7_reg == 1'd1) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter14 == 1'b1) & (icmp_ln17_reg_1279_pp0_iter13_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln17_reg_1279_pp0_iter4_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)))) begin
>>>>>>> cf5dd79afe81a371ef9c7f2b2ec20459fa39e383
        AXI_DATA_ARVALID = 1'b1;
    end else begin
        AXI_DATA_ARVALID = 1'b0;
    end
end

always @ (*) begin
<<<<<<< HEAD
    if (((1'b1 == ap_CS_fsm_state2) & (1'b0 == ap_block_state2_io))) begin
=======
    if (((1'b0 == ap_block_pp0_stage8_11001) & (icmp_ln17_reg_1279_pp0_iter14_reg == 1'd1) & (ap_enable_reg_pp0_iter14 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        AXI_DATA_AWADDR = AXI_DATA_addr_19_reg_1505;
    end else if (((1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln17_reg_1279_pp0_iter13_reg == 1'd1) & (ap_enable_reg_pp0_iter13 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        AXI_DATA_AWADDR = AXI_DATA_addr_17_reg_1483;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln17_reg_1279_pp0_iter11_reg == 1'd1) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        AXI_DATA_AWADDR = AXI_DATA_addr_15_reg_1461;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln17_reg_1279_pp0_iter10_reg == 1'd1) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        AXI_DATA_AWADDR = AXI_DATA_addr_13_reg_1439;
    end else if (((1'b0 == ap_block_pp0_stage6_11001) & (icmp_ln17_reg_1279_pp0_iter8_reg == 1'd1) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        AXI_DATA_AWADDR = AXI_DATA_addr_11_reg_1417;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln17_reg_1279_pp0_iter7_reg == 1'd1) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        AXI_DATA_AWADDR = AXI_DATA_addr_9_reg_1395;
    end else if (((1'b0 == ap_block_pp0_stage5_11001) & (icmp_ln17_reg_1279_pp0_iter5_reg == 1'd1) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        AXI_DATA_AWADDR = AXI_DATA_addr_7_reg_1373;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln17_reg_1279_pp0_iter3_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        AXI_DATA_AWADDR = AXI_DATA_addr_5_reg_1351;
    end else if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln17_reg_1279_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        AXI_DATA_AWADDR = AXI_DATA_addr_3_reg_1329;
    end else if (((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (icmp_ln17_reg_1279 == 1'd1))) begin
        AXI_DATA_AWADDR = AXI_DATA_addr_1_reg_1302;
    end else begin
        AXI_DATA_AWADDR = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln17_reg_1279_pp0_iter10_reg == 1'd1) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage6_11001) & (icmp_ln17_reg_1279_pp0_iter8_reg == 1'd1) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln17_reg_1279_pp0_iter7_reg == 1'd1) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln17_reg_1279_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln17_reg_1279_pp0_iter13_reg == 1'd1) & (ap_enable_reg_pp0_iter13 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage5_11001) & (icmp_ln17_reg_1279_pp0_iter5_reg == 1'd1) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (icmp_ln17_reg_1279 == 1'd1)) | ((1'b0 == ap_block_pp0_stage8_11001) & (icmp_ln17_reg_1279_pp0_iter14_reg == 1'd1) & (ap_enable_reg_pp0_iter14 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln17_reg_1279_pp0_iter3_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln17_reg_1279_pp0_iter11_reg == 1'd1) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)))) begin
>>>>>>> cf5dd79afe81a371ef9c7f2b2ec20459fa39e383
        AXI_DATA_AWVALID = 1'b1;
    end else begin
        AXI_DATA_AWVALID = 1'b0;
    end
end

always @ (*) begin
<<<<<<< HEAD
    if (((1'b1 == AXI_DATA_BVALID) & (1'b1 == ap_CS_fsm_state17))) begin
=======
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln17_reg_1279_pp0_iter9_reg == 1'd1) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage6_11001) & (icmp_ln17_reg_1279_pp0_iter4_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln17_reg_1279_pp0_iter6_reg == 1'd1) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln17_reg_1279_pp0_iter15_reg == 1'd1) & (ap_enable_reg_pp0_iter15 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln17_reg_1279_pp0_iter12_reg == 1'd1) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (icmp_ln17_reg_1279_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage9_11001) & (icmp_ln17_reg_1279_pp0_iter13_reg == 1'd1) & (ap_enable_reg_pp0_iter13 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_11001) & (icmp_ln17_reg_1279_pp0_iter10_reg == 1'd1) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln17_reg_1279_pp0_iter2_reg == 1'd1)) | ((1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln17_reg_1279_pp0_iter7_reg == 1'd1) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)))) begin
>>>>>>> cf5dd79afe81a371ef9c7f2b2ec20459fa39e383
        AXI_DATA_BREADY = 1'b1;
    end else begin
        AXI_DATA_BREADY = 1'b0;
    end
end

always @ (*) begin
<<<<<<< HEAD
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln13_reg_187 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
=======
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln17_reg_1279_pp0_iter13_reg == 1'd1) & (ap_enable_reg_pp0_iter13 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage6_11001) & (icmp_ln17_reg_1279_pp0_iter11_reg == 1'd1) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln17_reg_1279_pp0_iter10_reg == 1'd1) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln17_reg_1279_pp0_iter5_reg == 1'd1) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln17_reg_1279_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage5_11001) & (icmp_ln17_reg_1279_pp0_iter8_reg == 1'd1) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage9_11001) & (icmp_ln17_reg_1279_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (icmp_ln17_reg_1279 == 1'd1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (icmp_ln17_reg_1279_pp0_iter6_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln17_reg_1279_pp0_iter14_reg == 1'd1) & (ap_enable_reg_pp0_iter14 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)))) begin
>>>>>>> cf5dd79afe81a371ef9c7f2b2ec20459fa39e383
        AXI_DATA_RREADY = 1'b1;
    end else begin
        AXI_DATA_RREADY = 1'b0;
    end
end

always @ (*) begin
<<<<<<< HEAD
    if (((icmp_ln13_reg_187_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
=======
    if (((1'b0 == ap_block_pp0_stage9_01001) & (icmp_ln17_reg_1279_pp0_iter14_reg == 1'd1) & (ap_enable_reg_pp0_iter14 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        AXI_DATA_WDATA = select_ln20_9_reg_1516;
    end else if (((1'b0 == ap_block_pp0_stage4_01001) & (icmp_ln17_reg_1279_pp0_iter13_reg == 1'd1) & (ap_enable_reg_pp0_iter13 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        AXI_DATA_WDATA = select_ln20_8_reg_1494;
    end else if (((1'b0 == ap_block_pp0_stage8_01001) & (icmp_ln17_reg_1279_pp0_iter11_reg == 1'd1) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        AXI_DATA_WDATA = select_ln20_7_reg_1472;
    end else if (((1'b0 == ap_block_pp0_stage3_01001) & (icmp_ln17_reg_1279_pp0_iter10_reg == 1'd1) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        AXI_DATA_WDATA = select_ln20_6_reg_1450;
    end else if (((1'b0 == ap_block_pp0_stage7_01001) & (icmp_ln17_reg_1279_pp0_iter8_reg == 1'd1) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        AXI_DATA_WDATA = select_ln20_5_reg_1428;
    end else if (((1'b0 == ap_block_pp0_stage2_01001) & (icmp_ln17_reg_1279_pp0_iter7_reg == 1'd1) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        AXI_DATA_WDATA = select_ln20_4_reg_1406;
    end else if (((1'b0 == ap_block_pp0_stage6_01001) & (icmp_ln17_reg_1279_pp0_iter5_reg == 1'd1) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        AXI_DATA_WDATA = select_ln20_3_reg_1384;
    end else if (((1'b0 == ap_block_pp0_stage1_01001) & (icmp_ln17_reg_1279_pp0_iter4_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        AXI_DATA_WDATA = select_ln20_2_reg_1362;
    end else if (((1'b0 == ap_block_pp0_stage5_01001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (icmp_ln17_reg_1279_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        AXI_DATA_WDATA = select_ln20_1_reg_1340;
    end else if (((1'b0 == ap_block_pp0_stage0_01001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln17_reg_1279 == 1'd1))) begin
        AXI_DATA_WDATA = select_ln20_reg_1318;
    end else begin
        AXI_DATA_WDATA = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln17_reg_1279_pp0_iter7_reg == 1'd1) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage6_11001) & (icmp_ln17_reg_1279_pp0_iter5_reg == 1'd1) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln17_reg_1279_pp0_iter4_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln17_reg_1279_pp0_iter13_reg == 1'd1) & (ap_enable_reg_pp0_iter13 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln17_reg_1279_pp0_iter10_reg == 1'd1) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (icmp_ln17_reg_1279_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage9_11001) & (icmp_ln17_reg_1279_pp0_iter14_reg == 1'd1) & (ap_enable_reg_pp0_iter14 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_11001) & (icmp_ln17_reg_1279_pp0_iter11_reg == 1'd1) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln17_reg_1279 == 1'd1)) | ((1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln17_reg_1279_pp0_iter8_reg == 1'd1) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)))) begin
>>>>>>> cf5dd79afe81a371ef9c7f2b2ec20459fa39e383
        AXI_DATA_WVALID = 1'b1;
    end else begin
        AXI_DATA_WVALID = 1'b0;
    end
end

always @ (*) begin
<<<<<<< HEAD
    if ((1'b1 == ap_CS_fsm_state2)) begin
=======
    if ((((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln17_reg_1279 == 1'd1)) | ((1'b0 == ap_block_pp0_stage7) & (icmp_ln17_reg_1279_pp0_iter4_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage2) & (icmp_ln17_reg_1279_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage4) & (icmp_ln17_reg_1279_pp0_iter9_reg == 1'd1) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3) & (icmp_ln17_reg_1279_pp0_iter6_reg == 1'd1) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6) & (icmp_ln17_reg_1279_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage5) & (icmp_ln17_reg_1279_pp0_iter12_reg == 1'd1) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter14 == 1'b1) & (icmp_ln17_reg_1279_pp0_iter13_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage9) & (icmp_ln17_reg_1279_pp0_iter10_reg == 1'd1) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8) & (icmp_ln17_reg_1279_pp0_iter7_reg == 1'd1) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)))) begin
>>>>>>> cf5dd79afe81a371ef9c7f2b2ec20459fa39e383
        AXI_DATA_blk_n_AR = m_axi_AXI_DATA_ARREADY;
    end else begin
        AXI_DATA_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
<<<<<<< HEAD
    if ((1'b1 == ap_CS_fsm_state2)) begin
=======
    if ((((1'b0 == ap_block_pp0_stage1) & (icmp_ln17_reg_1279_pp0_iter7_reg == 1'd1) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage7) & (icmp_ln17_reg_1279_pp0_iter11_reg == 1'd1) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage2) & (icmp_ln17_reg_1279_pp0_iter10_reg == 1'd1) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln17_reg_1279_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage3) & (icmp_ln17_reg_1279_pp0_iter13_reg == 1'd1) & (ap_enable_reg_pp0_iter13 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage6) & (icmp_ln17_reg_1279_pp0_iter8_reg == 1'd1) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5) & (icmp_ln17_reg_1279_pp0_iter5_reg == 1'd1) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln17_reg_1279_pp0_iter3_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (icmp_ln17_reg_1279 == 1'd1)) | ((1'b0 == ap_block_pp0_stage8) & (icmp_ln17_reg_1279_pp0_iter14_reg == 1'd1) & (ap_enable_reg_pp0_iter14 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)))) begin
>>>>>>> cf5dd79afe81a371ef9c7f2b2ec20459fa39e383
        AXI_DATA_blk_n_AW = m_axi_AXI_DATA_AWREADY;
    end else begin
        AXI_DATA_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
<<<<<<< HEAD
    if ((1'b1 == ap_CS_fsm_state17)) begin
=======
    if ((((1'b0 == ap_block_pp0_stage1) & (icmp_ln17_reg_1279_pp0_iter6_reg == 1'd1) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage7) & (icmp_ln17_reg_1279_pp0_iter7_reg == 1'd1) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage2) & (icmp_ln17_reg_1279_pp0_iter9_reg == 1'd1) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage4) & (icmp_ln17_reg_1279_pp0_iter15_reg == 1'd1) & (ap_enable_reg_pp0_iter15 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3) & (icmp_ln17_reg_1279_pp0_iter12_reg == 1'd1) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage6) & (icmp_ln17_reg_1279_pp0_iter4_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5) & (icmp_ln17_reg_1279_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln17_reg_1279_pp0_iter2_reg == 1'd1)) | ((1'b0 == ap_block_pp0_stage9) & (icmp_ln17_reg_1279_pp0_iter13_reg == 1'd1) & (ap_enable_reg_pp0_iter13 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8) & (icmp_ln17_reg_1279_pp0_iter10_reg == 1'd1) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)))) begin
>>>>>>> cf5dd79afe81a371ef9c7f2b2ec20459fa39e383
        AXI_DATA_blk_n_B = m_axi_AXI_DATA_BVALID;
    end else begin
        AXI_DATA_blk_n_B = 1'b1;
    end
end

always @ (*) begin
<<<<<<< HEAD
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln13_reg_187 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
=======
    if ((((1'b0 == ap_block_pp0_stage1) & (icmp_ln17_reg_1279_pp0_iter10_reg == 1'd1) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage7) & (icmp_ln17_reg_1279_pp0_iter14_reg == 1'd1) & (ap_enable_reg_pp0_iter14 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage2) & (icmp_ln17_reg_1279_pp0_iter13_reg == 1'd1) & (ap_enable_reg_pp0_iter13 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage4) & (icmp_ln17_reg_1279_pp0_iter5_reg == 1'd1) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln17_reg_1279_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage6) & (icmp_ln17_reg_1279_pp0_iter11_reg == 1'd1) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5) & (icmp_ln17_reg_1279_pp0_iter8_reg == 1'd1) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter7 == 1'b1) & (icmp_ln17_reg_1279_pp0_iter6_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage9) & (icmp_ln17_reg_1279_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (icmp_ln17_reg_1279 == 1'd1)))) begin
>>>>>>> cf5dd79afe81a371ef9c7f2b2ec20459fa39e383
        AXI_DATA_blk_n_R = m_axi_AXI_DATA_RVALID;
    end else begin
        AXI_DATA_blk_n_R = 1'b1;
    end
end

always @ (*) begin
<<<<<<< HEAD
    if (((icmp_ln13_reg_187_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
=======
    if ((((1'b0 == ap_block_pp0_stage1) & (icmp_ln17_reg_1279_pp0_iter4_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage7) & (icmp_ln17_reg_1279_pp0_iter8_reg == 1'd1) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage2) & (icmp_ln17_reg_1279_pp0_iter7_reg == 1'd1) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage4) & (icmp_ln17_reg_1279_pp0_iter13_reg == 1'd1) & (ap_enable_reg_pp0_iter13 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3) & (icmp_ln17_reg_1279_pp0_iter10_reg == 1'd1) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage6) & (icmp_ln17_reg_1279_pp0_iter5_reg == 1'd1) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5) & (icmp_ln17_reg_1279_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln17_reg_1279 == 1'd1)) | ((1'b0 == ap_block_pp0_stage9) & (icmp_ln17_reg_1279_pp0_iter14_reg == 1'd1) & (ap_enable_reg_pp0_iter14 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8) & (icmp_ln17_reg_1279_pp0_iter11_reg == 1'd1) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)))) begin
>>>>>>> cf5dd79afe81a371ef9c7f2b2ec20459fa39e383
        AXI_DATA_blk_n_W = m_axi_AXI_DATA_WREADY;
    end else begin
        AXI_DATA_blk_n_W = 1'b1;
    end
end

always @ (*) begin
<<<<<<< HEAD
    if ((icmp_ln13_fu_151_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state9 = 1'b1;
=======
    if ((icmp_ln17_fu_416_p2 == 1'd0)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
>>>>>>> cf5dd79afe81a371ef9c7f2b2ec20459fa39e383
    end else begin
        ap_condition_pp0_exit_iter0_state9 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == AXI_DATA_BVALID) & (1'b1 == ap_CS_fsm_state17))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
<<<<<<< HEAD
    if (((1'b1 == AXI_DATA_BVALID) & (1'b1 == ap_CS_fsm_state17))) begin
=======
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln17_reg_1279 == 1'd1))) begin
        ap_phi_mux_i_phi_fu_408_p4 = add_ln17_reg_1313;
    end else begin
        ap_phi_mux_i_phi_fu_408_p4 = i_reg_404;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state157)) begin
>>>>>>> cf5dd79afe81a371ef9c7f2b2ec20459fa39e383
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
<<<<<<< HEAD
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (1'b0 == ap_block_state2_io))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
=======
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln17_fu_416_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b0)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln17_fu_416_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state157;
>>>>>>> cf5dd79afe81a371ef9c7f2b2ec20459fa39e383
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((icmp_ln13_fu_151_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0)) & ~((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)) | ((icmp_ln13_fu_151_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            if (((1'b1 == AXI_DATA_BVALID) & (1'b1 == ap_CS_fsm_state17))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

<<<<<<< HEAD
assign add_ln13_fu_145_p2 = (i_reg_122 + 20'd1);
=======
assign add_ln17_fu_494_p2 = (i_reg_404 + 12'd10);

assign add_ln19_10_fu_923_p2 = (shl_ln_reg_1283_pp0_iter9_reg + 14'd24);

assign add_ln19_11_fu_932_p2 = (zext_ln19_6_fu_928_p1 + in_read_reg_1265);

assign add_ln19_12_fu_1005_p2 = (shl_ln_reg_1283_pp0_iter10_reg + 14'd28);

assign add_ln19_13_fu_1014_p2 = (zext_ln19_7_fu_1010_p1 + in_read_reg_1265);

assign add_ln19_14_fu_1087_p2 = (shl_ln_reg_1283_pp0_iter12_reg + 14'd32);

assign add_ln19_15_fu_1096_p2 = (zext_ln19_8_fu_1092_p1 + in_read_reg_1265);

assign add_ln19_16_fu_1169_p2 = (shl_ln_reg_1283_pp0_iter13_reg + 14'd36);

assign add_ln19_17_fu_1178_p2 = (zext_ln19_9_fu_1174_p1 + in_read_reg_1265);

assign add_ln19_1_fu_522_p2 = (zext_ln19_1_fu_518_p1 + in_read_reg_1265);

assign add_ln19_2_fu_595_p2 = (shl_ln_reg_1283_pp0_iter3_reg + 14'd8);

assign add_ln19_3_fu_604_p2 = (zext_ln19_2_fu_600_p1 + in_read_reg_1265);

assign add_ln19_4_fu_677_p2 = (shl_ln_reg_1283_pp0_iter4_reg + 14'd12);

assign add_ln19_5_fu_686_p2 = (zext_ln19_3_fu_682_p1 + in_read_reg_1265);

assign add_ln19_6_fu_759_p2 = (shl_ln_reg_1283_pp0_iter6_reg + 14'd16);

assign add_ln19_7_fu_768_p2 = (zext_ln19_4_fu_764_p1 + in_read_reg_1265);

assign add_ln19_8_fu_841_p2 = (shl_ln_reg_1283_pp0_iter7_reg + 14'd20);

assign add_ln19_9_fu_850_p2 = (zext_ln19_5_fu_846_p1 + in_read_reg_1265);

assign add_ln19_fu_434_p2 = (zext_ln19_fu_430_p1 + in_read_reg_1265);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd5];
>>>>>>> cf5dd79afe81a371ef9c7f2b2ec20459fa39e383

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

<<<<<<< HEAD
assign ap_CS_fsm_state17 = ap_CS_fsm[32'd13];
=======
assign ap_CS_fsm_state157 = ap_CS_fsm[32'd11];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((1'b0 == AXI_DATA_RVALID) & (ap_enable_reg_pp0_iter7 == 1'b1) & (icmp_ln17_reg_1279_pp0_iter6_reg == 1'd1)) | ((1'b0 == AXI_DATA_BVALID) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln17_reg_1279_pp0_iter2_reg == 1'd1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((1'b0 == AXI_DATA_RVALID) & (ap_enable_reg_pp0_iter7 == 1'b1) & (icmp_ln17_reg_1279_pp0_iter6_reg == 1'd1)) | ((1'b1 == ap_block_state42_io) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((1'b0 == AXI_DATA_BVALID) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln17_reg_1279_pp0_iter2_reg == 1'd1)) | ((1'b1 == ap_block_state12_io) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_enable_reg_pp0_iter14 == 1'b1) & (1'b1 == ap_block_state142_io)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((1'b0 == AXI_DATA_RVALID) & (ap_enable_reg_pp0_iter7 == 1'b1) & (icmp_ln17_reg_1279_pp0_iter6_reg == 1'd1)) | ((1'b1 == ap_block_state42_io) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((1'b0 == AXI_DATA_BVALID) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln17_reg_1279_pp0_iter2_reg == 1'd1)) | ((1'b1 == ap_block_state12_io) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_enable_reg_pp0_iter14 == 1'b1) & (1'b1 == ap_block_state142_io)));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_01001 = (((1'b0 == AXI_DATA_BVALID) & (icmp_ln17_reg_1279_pp0_iter6_reg == 1'd1) & (ap_enable_reg_pp0_iter6 == 1'b1)) | ((icmp_ln17_reg_1279_pp0_iter10_reg == 1'd1) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == AXI_DATA_RVALID)));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state3_io)) | ((1'b1 == ap_block_state73_io) & (ap_enable_reg_pp0_iter7 == 1'b1)) | ((1'b1 == ap_block_state43_io) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((1'b0 == AXI_DATA_BVALID) & (icmp_ln17_reg_1279_pp0_iter6_reg == 1'd1) & (ap_enable_reg_pp0_iter6 == 1'b1)) | ((icmp_ln17_reg_1279_pp0_iter10_reg == 1'd1) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == AXI_DATA_RVALID)));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state3_io)) | ((1'b1 == ap_block_state73_io) & (ap_enable_reg_pp0_iter7 == 1'b1)) | ((1'b1 == ap_block_state43_io) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((1'b0 == AXI_DATA_BVALID) & (icmp_ln17_reg_1279_pp0_iter6_reg == 1'd1) & (ap_enable_reg_pp0_iter6 == 1'b1)) | ((icmp_ln17_reg_1279_pp0_iter10_reg == 1'd1) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == AXI_DATA_RVALID)));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_01001 = (((icmp_ln17_reg_1279_pp0_iter13_reg == 1'd1) & (ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == AXI_DATA_RVALID)) | ((icmp_ln17_reg_1279_pp0_iter9_reg == 1'd1) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == AXI_DATA_BVALID)));
end

always @ (*) begin
    ap_block_pp0_stage2_11001 = (((1'b1 == ap_block_state74_io) & (ap_enable_reg_pp0_iter7 == 1'b1)) | ((1'b1 == ap_block_state34_io) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((icmp_ln17_reg_1279_pp0_iter13_reg == 1'd1) & (ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == AXI_DATA_RVALID)) | ((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_block_state104_io)) | ((icmp_ln17_reg_1279_pp0_iter9_reg == 1'd1) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == AXI_DATA_BVALID)));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = (((1'b1 == ap_block_state74_io) & (ap_enable_reg_pp0_iter7 == 1'b1)) | ((1'b1 == ap_block_state34_io) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((icmp_ln17_reg_1279_pp0_iter13_reg == 1'd1) & (ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == AXI_DATA_RVALID)) | ((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_block_state104_io)) | ((icmp_ln17_reg_1279_pp0_iter9_reg == 1'd1) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == AXI_DATA_BVALID)));
end

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage3_01001 = (((1'b0 == AXI_DATA_RVALID) & (icmp_ln17_reg_1279_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((icmp_ln17_reg_1279_pp0_iter12_reg == 1'd1) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == AXI_DATA_BVALID)));
end

always @ (*) begin
    ap_block_pp0_stage3_11001 = (((1'b1 == ap_block_state65_io) & (ap_enable_reg_pp0_iter6 == 1'b1)) | ((1'b0 == AXI_DATA_RVALID) & (icmp_ln17_reg_1279_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b1 == ap_block_state135_io)) | ((icmp_ln17_reg_1279_pp0_iter12_reg == 1'd1) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == AXI_DATA_BVALID)) | ((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_block_state105_io)));
end

always @ (*) begin
    ap_block_pp0_stage3_subdone = (((1'b1 == ap_block_state65_io) & (ap_enable_reg_pp0_iter6 == 1'b1)) | ((1'b0 == AXI_DATA_RVALID) & (icmp_ln17_reg_1279_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b1 == ap_block_state135_io)) | ((icmp_ln17_reg_1279_pp0_iter12_reg == 1'd1) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == AXI_DATA_BVALID)) | ((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_block_state105_io)));
end

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage4_01001 = (((1'b0 == AXI_DATA_RVALID) & (icmp_ln17_reg_1279_pp0_iter5_reg == 1'd1) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((icmp_ln17_reg_1279_pp0_iter15_reg == 1'd1) & (ap_enable_reg_pp0_iter15 == 1'b1) & (1'b0 == AXI_DATA_BVALID)));
end

always @ (*) begin
    ap_block_pp0_stage4_11001 = (((1'b1 == ap_block_state26_io) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == AXI_DATA_RVALID) & (icmp_ln17_reg_1279_pp0_iter5_reg == 1'd1) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((icmp_ln17_reg_1279_pp0_iter15_reg == 1'd1) & (ap_enable_reg_pp0_iter15 == 1'b1) & (1'b0 == AXI_DATA_BVALID)) | ((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b1 == ap_block_state136_io)) | ((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_block_state96_io)));
end

always @ (*) begin
    ap_block_pp0_stage4_subdone = (((1'b1 == ap_block_state26_io) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == AXI_DATA_RVALID) & (icmp_ln17_reg_1279_pp0_iter5_reg == 1'd1) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((icmp_ln17_reg_1279_pp0_iter15_reg == 1'd1) & (ap_enable_reg_pp0_iter15 == 1'b1) & (1'b0 == AXI_DATA_BVALID)) | ((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b1 == ap_block_state136_io)) | ((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_block_state96_io)));
end

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage5_01001 = (((1'b0 == AXI_DATA_BVALID) & (icmp_ln17_reg_1279_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((icmp_ln17_reg_1279_pp0_iter8_reg == 1'd1) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b0 == AXI_DATA_RVALID)));
end

always @ (*) begin
    ap_block_pp0_stage5_11001 = (((1'b1 == ap_block_state57_io) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((1'b1 == ap_block_state27_io) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == AXI_DATA_BVALID) & (icmp_ln17_reg_1279_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_block_state127_io)) | ((icmp_ln17_reg_1279_pp0_iter8_reg == 1'd1) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b0 == AXI_DATA_RVALID)));
end

always @ (*) begin
    ap_block_pp0_stage5_subdone = (((1'b1 == ap_block_state57_io) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((1'b1 == ap_block_state27_io) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == AXI_DATA_BVALID) & (icmp_ln17_reg_1279_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_block_state127_io)) | ((icmp_ln17_reg_1279_pp0_iter8_reg == 1'd1) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b0 == AXI_DATA_RVALID)));
end

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage6_01001 = (((1'b0 == AXI_DATA_BVALID) & (icmp_ln17_reg_1279_pp0_iter4_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((icmp_ln17_reg_1279_pp0_iter11_reg == 1'd1) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b0 == AXI_DATA_RVALID)));
end

always @ (*) begin
    ap_block_pp0_stage6_11001 = (((1'b1 == ap_block_state58_io) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((1'b1 == ap_block_state18_io) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == AXI_DATA_BVALID) & (icmp_ln17_reg_1279_pp0_iter4_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((icmp_ln17_reg_1279_pp0_iter11_reg == 1'd1) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b0 == AXI_DATA_RVALID)) | ((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_block_state88_io)));
end

always @ (*) begin
    ap_block_pp0_stage6_subdone = (((1'b1 == ap_block_state58_io) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((1'b1 == ap_block_state18_io) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == AXI_DATA_BVALID) & (icmp_ln17_reg_1279_pp0_iter4_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((icmp_ln17_reg_1279_pp0_iter11_reg == 1'd1) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b0 == AXI_DATA_RVALID)) | ((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_block_state88_io)));
end

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage7_01001 = (((1'b0 == AXI_DATA_BVALID) & (icmp_ln17_reg_1279_pp0_iter7_reg == 1'd1) & (ap_enable_reg_pp0_iter7 == 1'b1)) | ((icmp_ln17_reg_1279_pp0_iter14_reg == 1'd1) & (ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == AXI_DATA_RVALID)));
end

always @ (*) begin
    ap_block_pp0_stage7_11001 = (((1'b0 == AXI_DATA_BVALID) & (icmp_ln17_reg_1279_pp0_iter7_reg == 1'd1) & (ap_enable_reg_pp0_iter7 == 1'b1)) | ((icmp_ln17_reg_1279_pp0_iter14_reg == 1'd1) & (ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == AXI_DATA_RVALID)) | ((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_block_state119_io)) | ((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_block_state89_io)) | ((1'b1 == ap_block_state49_io) & (ap_enable_reg_pp0_iter4 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage7_subdone = (((1'b0 == AXI_DATA_BVALID) & (icmp_ln17_reg_1279_pp0_iter7_reg == 1'd1) & (ap_enable_reg_pp0_iter7 == 1'b1)) | ((icmp_ln17_reg_1279_pp0_iter14_reg == 1'd1) & (ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == AXI_DATA_RVALID)) | ((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_block_state119_io)) | ((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_block_state89_io)) | ((1'b1 == ap_block_state49_io) & (ap_enable_reg_pp0_iter4 == 1'b1)));
end

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage8_01001 = (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == AXI_DATA_RVALID) & (icmp_ln17_reg_1279 == 1'd1)) | ((icmp_ln17_reg_1279_pp0_iter10_reg == 1'd1) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == AXI_DATA_BVALID)));
end

always @ (*) begin
    ap_block_pp0_stage8_11001 = (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == AXI_DATA_RVALID) & (icmp_ln17_reg_1279 == 1'd1)) | ((1'b1 == ap_block_state80_io) & (ap_enable_reg_pp0_iter7 == 1'b1)) | ((ap_enable_reg_pp0_iter14 == 1'b1) & (1'b1 == ap_block_state150_io)) | ((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_block_state120_io)) | ((icmp_ln17_reg_1279_pp0_iter10_reg == 1'd1) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == AXI_DATA_BVALID)));
end

always @ (*) begin
    ap_block_pp0_stage8_subdone = (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == AXI_DATA_RVALID) & (icmp_ln17_reg_1279 == 1'd1)) | ((1'b1 == ap_block_state80_io) & (ap_enable_reg_pp0_iter7 == 1'b1)) | ((ap_enable_reg_pp0_iter14 == 1'b1) & (1'b1 == ap_block_state150_io)) | ((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_block_state120_io)) | ((icmp_ln17_reg_1279_pp0_iter10_reg == 1'd1) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == AXI_DATA_BVALID)));
end

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage9_01001 = (((1'b0 == AXI_DATA_RVALID) & (icmp_ln17_reg_1279_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((icmp_ln17_reg_1279_pp0_iter13_reg == 1'd1) & (ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == AXI_DATA_BVALID)));
end

always @ (*) begin
    ap_block_pp0_stage9_11001 = (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state11_io)) | ((1'b0 == AXI_DATA_RVALID) & (icmp_ln17_reg_1279_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((ap_enable_reg_pp0_iter14 == 1'b1) & (1'b1 == ap_block_state151_io)) | ((icmp_ln17_reg_1279_pp0_iter13_reg == 1'd1) & (ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == AXI_DATA_BVALID)) | ((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_block_state111_io)));
end

always @ (*) begin
    ap_block_pp0_stage9_subdone = (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state11_io)) | ((1'b0 == AXI_DATA_RVALID) & (icmp_ln17_reg_1279_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((ap_enable_reg_pp0_iter14 == 1'b1) & (1'b1 == ap_block_state151_io)) | ((icmp_ln17_reg_1279_pp0_iter13_reg == 1'd1) & (ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == AXI_DATA_BVALID)) | ((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_block_state111_io)));
end

assign ap_block_state100_pp0_stage8_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state101_pp0_stage9_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state102_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state103_pp0_stage1_iter10 = ((icmp_ln17_reg_1279_pp0_iter10_reg == 1'd1) & (1'b0 == AXI_DATA_RVALID));
end

always @ (*) begin
    ap_block_state104_io = ((icmp_ln17_reg_1279_pp0_iter10_reg == 1'd1) & (1'b0 == AXI_DATA_AWREADY));
end

assign ap_block_state104_pp0_stage2_iter10 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state105_io = ((icmp_ln17_reg_1279_pp0_iter10_reg == 1'd1) & (1'b0 == AXI_DATA_WREADY));
end

assign ap_block_state105_pp0_stage3_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state106_pp0_stage4_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state107_pp0_stage5_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state108_pp0_stage6_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state109_pp0_stage7_iter10 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state10_pp0_stage8_iter0 = ((1'b0 == AXI_DATA_RVALID) & (icmp_ln17_reg_1279 == 1'd1));
end

always @ (*) begin
    ap_block_state110_pp0_stage8_iter10 = ((icmp_ln17_reg_1279_pp0_iter10_reg == 1'd1) & (1'b0 == AXI_DATA_BVALID));
end

always @ (*) begin
    ap_block_state111_io = ((icmp_ln17_reg_1279_pp0_iter10_reg == 1'd1) & (1'b0 == AXI_DATA_ARREADY));
end

assign ap_block_state111_pp0_stage9_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state112_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state113_pp0_stage1_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state114_pp0_stage2_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state115_pp0_stage3_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state116_pp0_stage4_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state117_pp0_stage5_iter11 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state118_pp0_stage6_iter11 = ((icmp_ln17_reg_1279_pp0_iter11_reg == 1'd1) & (1'b0 == AXI_DATA_RVALID));
end

always @ (*) begin
    ap_block_state119_io = ((icmp_ln17_reg_1279_pp0_iter11_reg == 1'd1) & (1'b0 == AXI_DATA_AWREADY));
end

assign ap_block_state119_pp0_stage7_iter11 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state11_io = ((1'b0 == AXI_DATA_AWREADY) & (icmp_ln17_reg_1279 == 1'd1));
end

assign ap_block_state11_pp0_stage9_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state120_io = ((icmp_ln17_reg_1279_pp0_iter11_reg == 1'd1) & (1'b0 == AXI_DATA_WREADY));
end

assign ap_block_state120_pp0_stage8_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state121_pp0_stage9_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state122_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state123_pp0_stage1_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state124_pp0_stage2_iter12 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state125_pp0_stage3_iter12 = ((icmp_ln17_reg_1279_pp0_iter12_reg == 1'd1) & (1'b0 == AXI_DATA_BVALID));
end

assign ap_block_state126_pp0_stage4_iter12 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state127_io = ((icmp_ln17_reg_1279_pp0_iter12_reg == 1'd1) & (1'b0 == AXI_DATA_ARREADY));
end

assign ap_block_state127_pp0_stage5_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state128_pp0_stage6_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state129_pp0_stage7_iter12 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state12_io = ((1'b0 == AXI_DATA_WREADY) & (icmp_ln17_reg_1279 == 1'd1));
end

assign ap_block_state12_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state130_pp0_stage8_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state131_pp0_stage9_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state132_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state133_pp0_stage1_iter13 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state134_pp0_stage2_iter13 = ((icmp_ln17_reg_1279_pp0_iter13_reg == 1'd1) & (1'b0 == AXI_DATA_RVALID));
end

always @ (*) begin
    ap_block_state135_io = ((icmp_ln17_reg_1279_pp0_iter13_reg == 1'd1) & (1'b0 == AXI_DATA_AWREADY));
end

assign ap_block_state135_pp0_stage3_iter13 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state136_io = ((icmp_ln17_reg_1279_pp0_iter13_reg == 1'd1) & (1'b0 == AXI_DATA_WREADY));
end

assign ap_block_state136_pp0_stage4_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state137_pp0_stage5_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state138_pp0_stage6_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state139_pp0_stage7_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state140_pp0_stage8_iter13 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state141_pp0_stage9_iter13 = ((icmp_ln17_reg_1279_pp0_iter13_reg == 1'd1) & (1'b0 == AXI_DATA_BVALID));
end

always @ (*) begin
    ap_block_state142_io = ((icmp_ln17_reg_1279_pp0_iter13_reg == 1'd1) & (1'b0 == AXI_DATA_ARREADY));
end

assign ap_block_state142_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state143_pp0_stage1_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state144_pp0_stage2_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state145_pp0_stage3_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state146_pp0_stage4_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state147_pp0_stage5_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state148_pp0_stage6_iter14 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state149_pp0_stage7_iter14 = ((icmp_ln17_reg_1279_pp0_iter14_reg == 1'd1) & (1'b0 == AXI_DATA_RVALID));
end

assign ap_block_state14_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state150_io = ((icmp_ln17_reg_1279_pp0_iter14_reg == 1'd1) & (1'b0 == AXI_DATA_AWREADY));
end

assign ap_block_state150_pp0_stage8_iter14 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state151_io = ((icmp_ln17_reg_1279_pp0_iter14_reg == 1'd1) & (1'b0 == AXI_DATA_WREADY));
end

assign ap_block_state151_pp0_stage9_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state152_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state153_pp0_stage1_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state154_pp0_stage2_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state155_pp0_stage3_iter15 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state156_pp0_stage4_iter15 = ((icmp_ln17_reg_1279_pp0_iter15_reg == 1'd1) & (1'b0 == AXI_DATA_BVALID));
end

assign ap_block_state15_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state17_pp0_stage5_iter1 = ((1'b0 == AXI_DATA_BVALID) & (icmp_ln17_reg_1279_pp0_iter1_reg == 1'd1));
end

always @ (*) begin
    ap_block_state18_io = ((1'b0 == AXI_DATA_ARREADY) & (icmp_ln17_reg_1279_pp0_iter1_reg == 1'd1));
end

assign ap_block_state18_pp0_stage6_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage7_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage8_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage9_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state25_pp0_stage3_iter2 = ((1'b0 == AXI_DATA_RVALID) & (icmp_ln17_reg_1279_pp0_iter2_reg == 1'd1));
end

always @ (*) begin
    ap_block_state26_io = ((1'b0 == AXI_DATA_AWREADY) & (icmp_ln17_reg_1279_pp0_iter2_reg == 1'd1));
end

assign ap_block_state26_pp0_stage4_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state27_io = ((1'b0 == AXI_DATA_WREADY) & (icmp_ln17_reg_1279_pp0_iter2_reg == 1'd1));
end

assign ap_block_state27_pp0_stage5_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage6_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage7_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage8_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage9_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state32_pp0_stage0_iter3 = ((1'b0 == AXI_DATA_BVALID) & (icmp_ln17_reg_1279_pp0_iter2_reg == 1'd1));
end

assign ap_block_state33_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state34_io = ((1'b0 == AXI_DATA_ARREADY) & (icmp_ln17_reg_1279_pp0_iter3_reg == 1'd1));
end

assign ap_block_state34_pp0_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage3_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage4_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage5_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage6_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage7_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_io = ((1'b0 == AXI_DATA_ARREADY) & (icmp_ln17_reg_1279 == 1'd1));
end

assign ap_block_state3_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage8_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state41_pp0_stage9_iter3 = ((1'b0 == AXI_DATA_RVALID) & (icmp_ln17_reg_1279_pp0_iter3_reg == 1'd1));
end

always @ (*) begin
    ap_block_state42_io = ((1'b0 == AXI_DATA_AWREADY) & (icmp_ln17_reg_1279_pp0_iter3_reg == 1'd1));
end

assign ap_block_state42_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state43_io = ((1'b0 == AXI_DATA_WREADY) & (icmp_ln17_reg_1279_pp0_iter4_reg == 1'd1));
end

assign ap_block_state43_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage2_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage3_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage4_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage5_iter4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state48_pp0_stage6_iter4 = ((1'b0 == AXI_DATA_BVALID) & (icmp_ln17_reg_1279_pp0_iter4_reg == 1'd1));
end

always @ (*) begin
    ap_block_state49_io = ((1'b0 == AXI_DATA_ARREADY) & (icmp_ln17_reg_1279_pp0_iter4_reg == 1'd1));
end

assign ap_block_state49_pp0_stage7_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp0_stage8_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp0_stage9_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp0_stage2_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp0_stage3_iter5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state56_pp0_stage4_iter5 = ((1'b0 == AXI_DATA_RVALID) & (icmp_ln17_reg_1279_pp0_iter5_reg == 1'd1));
end

always @ (*) begin
    ap_block_state57_io = ((1'b0 == AXI_DATA_AWREADY) & (icmp_ln17_reg_1279_pp0_iter5_reg == 1'd1));
end

assign ap_block_state57_pp0_stage5_iter5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state58_io = ((1'b0 == AXI_DATA_WREADY) & (icmp_ln17_reg_1279_pp0_iter5_reg == 1'd1));
end

assign ap_block_state58_pp0_stage6_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp0_stage7_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp0_stage8_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp0_stage9_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state63_pp0_stage1_iter6 = ((1'b0 == AXI_DATA_BVALID) & (icmp_ln17_reg_1279_pp0_iter6_reg == 1'd1));
end

assign ap_block_state64_pp0_stage2_iter6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state65_io = ((1'b0 == AXI_DATA_ARREADY) & (icmp_ln17_reg_1279_pp0_iter6_reg == 1'd1));
end

assign ap_block_state65_pp0_stage3_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state66_pp0_stage4_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state67_pp0_stage5_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state68_pp0_stage6_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state69_pp0_stage7_iter6 = ~(1'b1 == 1'b1);
>>>>>>> cf5dd79afe81a371ef9c7f2b2ec20459fa39e383

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

<<<<<<< HEAD
assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((1'b0 == AXI_DATA_RVALID) & (icmp_ln13_reg_187 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1));
=======
assign ap_block_state71_pp0_stage9_iter6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state72_pp0_stage0_iter7 = ((1'b0 == AXI_DATA_RVALID) & (icmp_ln17_reg_1279_pp0_iter6_reg == 1'd1));
end

always @ (*) begin
    ap_block_state73_io = ((1'b0 == AXI_DATA_AWREADY) & (icmp_ln17_reg_1279_pp0_iter7_reg == 1'd1));
end

assign ap_block_state73_pp0_stage1_iter7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state74_io = ((1'b0 == AXI_DATA_WREADY) & (icmp_ln17_reg_1279_pp0_iter7_reg == 1'd1));
end

assign ap_block_state74_pp0_stage2_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state75_pp0_stage3_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state76_pp0_stage4_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state77_pp0_stage5_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state78_pp0_stage6_iter7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state79_pp0_stage7_iter7 = ((1'b0 == AXI_DATA_BVALID) & (icmp_ln17_reg_1279_pp0_iter7_reg == 1'd1));
>>>>>>> cf5dd79afe81a371ef9c7f2b2ec20459fa39e383
end

always @ (*) begin
<<<<<<< HEAD
    ap_block_pp0_stage0_11001 = (((1'b1 == ap_block_state12_io) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((1'b0 == AXI_DATA_RVALID) & (icmp_ln13_reg_187 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
=======
    ap_block_state80_io = ((1'b0 == AXI_DATA_ARREADY) & (icmp_ln17_reg_1279_pp0_iter7_reg == 1'd1));
>>>>>>> cf5dd79afe81a371ef9c7f2b2ec20459fa39e383
end

always @ (*) begin
<<<<<<< HEAD
    ap_block_pp0_stage0_subdone = (((1'b1 == ap_block_state12_io) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((1'b0 == AXI_DATA_RVALID) & (icmp_ln13_reg_187 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_state10_pp0_stage0_iter1 = ((1'b0 == AXI_DATA_RVALID) & (icmp_ln13_reg_187 == 1'd0));
end

assign ap_block_state11_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state12_io = ((1'b0 == AXI_DATA_WREADY) & (icmp_ln13_reg_187_pp0_iter2_reg == 1'd0));
=======
    ap_block_state87_pp0_stage5_iter8 = ((icmp_ln17_reg_1279_pp0_iter8_reg == 1'd1) & (1'b0 == AXI_DATA_RVALID));
end

always @ (*) begin
    ap_block_state88_io = ((icmp_ln17_reg_1279_pp0_iter8_reg == 1'd1) & (1'b0 == AXI_DATA_AWREADY));
end

assign ap_block_state88_pp0_stage6_iter8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state89_io = ((icmp_ln17_reg_1279_pp0_iter8_reg == 1'd1) & (1'b0 == AXI_DATA_WREADY));
end

assign ap_block_state89_pp0_stage7_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state90_pp0_stage8_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state91_pp0_stage9_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state92_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state93_pp0_stage1_iter9 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state94_pp0_stage2_iter9 = ((icmp_ln17_reg_1279_pp0_iter9_reg == 1'd1) & (1'b0 == AXI_DATA_BVALID));
>>>>>>> cf5dd79afe81a371ef9c7f2b2ec20459fa39e383
end

assign ap_block_state12_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
<<<<<<< HEAD
    ap_block_state2_io = ((1'b0 == AXI_DATA_ARREADY) | (1'b0 == AXI_DATA_AWREADY));
=======
    ap_block_state96_io = ((icmp_ln17_reg_1279_pp0_iter9_reg == 1'd1) & (1'b0 == AXI_DATA_ARREADY));
>>>>>>> cf5dd79afe81a371ef9c7f2b2ec20459fa39e383
end

assign ap_block_state9_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

<<<<<<< HEAD
assign icmp_ln13_fu_151_p2 = ((i_reg_122 == 20'd921600) ? 1'b1 : 1'b0);

assign icmp_ln14_fu_157_p2 = (($signed(AXI_DATA_addr_read_reg_191) > $signed(8'd50)) ? 1'b1 : 1'b0);

assign select_ln14_fu_162_p3 = ((icmp_ln14_fu_157_p2[0:0] == 1'b1) ? 8'd255 : 8'd0);
=======
assign empty_17_fu_459_p2 = (zext_ln19_fu_430_p1 + out_read_reg_1251);

assign empty_18_fu_547_p2 = (zext_ln19_1_fu_518_p1 + out_read_reg_1251);

assign empty_19_fu_629_p2 = (zext_ln19_2_fu_600_p1 + out_read_reg_1251);

assign empty_20_fu_711_p2 = (zext_ln19_3_fu_682_p1 + out_read_reg_1251);

assign empty_21_fu_793_p2 = (zext_ln19_4_fu_764_p1 + out_read_reg_1251);

assign empty_22_fu_875_p2 = (zext_ln19_5_fu_846_p1 + out_read_reg_1251);

assign empty_23_fu_957_p2 = (zext_ln19_6_fu_928_p1 + out_read_reg_1251);

assign empty_24_fu_1039_p2 = (zext_ln19_7_fu_1010_p1 + out_read_reg_1251);

assign empty_25_fu_1121_p2 = (zext_ln19_8_fu_1092_p1 + out_read_reg_1251);

assign empty_26_fu_1203_p2 = (zext_ln19_9_fu_1174_p1 + out_read_reg_1251);

assign icmp_ln17_fu_416_p2 = ((ap_phi_mux_i_phi_fu_408_p4 < 12'd3000) ? 1'b1 : 1'b0);

assign icmp_ln19_1_fu_582_p2 = (($signed(tmp_1_reg_1335) > $signed(25'd0)) ? 1'b1 : 1'b0);

assign icmp_ln19_2_fu_664_p2 = (($signed(tmp_2_reg_1357) > $signed(25'd0)) ? 1'b1 : 1'b0);

assign icmp_ln19_3_fu_746_p2 = (($signed(tmp_3_reg_1379) > $signed(25'd0)) ? 1'b1 : 1'b0);

assign icmp_ln19_4_fu_828_p2 = (($signed(tmp_4_reg_1401) > $signed(25'd0)) ? 1'b1 : 1'b0);

assign icmp_ln19_5_fu_910_p2 = (($signed(tmp_5_reg_1423) > $signed(25'd0)) ? 1'b1 : 1'b0);

assign icmp_ln19_6_fu_992_p2 = (($signed(tmp_6_reg_1445) > $signed(25'd0)) ? 1'b1 : 1'b0);

assign icmp_ln19_7_fu_1074_p2 = (($signed(tmp_7_reg_1467) > $signed(25'd0)) ? 1'b1 : 1'b0);

assign icmp_ln19_8_fu_1156_p2 = (($signed(tmp_8_reg_1489) > $signed(25'd0)) ? 1'b1 : 1'b0);

assign icmp_ln19_9_fu_1238_p2 = (($signed(tmp_9_reg_1511) > $signed(25'd0)) ? 1'b1 : 1'b0);

assign icmp_ln19_fu_500_p2 = (($signed(tmp_reg_1308) > $signed(25'd0)) ? 1'b1 : 1'b0);

assign or_ln19_fu_513_p2 = (shl_ln_reg_1283_pp0_iter1_reg | 14'd4);

assign select_ln20_1_fu_587_p3 = ((icmp_ln19_1_fu_582_p2[0:0] == 1'b1) ? 32'd255 : 32'd0);

assign select_ln20_2_fu_669_p3 = ((icmp_ln19_2_fu_664_p2[0:0] == 1'b1) ? 32'd255 : 32'd0);

assign select_ln20_3_fu_751_p3 = ((icmp_ln19_3_fu_746_p2[0:0] == 1'b1) ? 32'd255 : 32'd0);

assign select_ln20_4_fu_833_p3 = ((icmp_ln19_4_fu_828_p2[0:0] == 1'b1) ? 32'd255 : 32'd0);

assign select_ln20_5_fu_915_p3 = ((icmp_ln19_5_fu_910_p2[0:0] == 1'b1) ? 32'd255 : 32'd0);

assign select_ln20_6_fu_997_p3 = ((icmp_ln19_6_fu_992_p2[0:0] == 1'b1) ? 32'd255 : 32'd0);

assign select_ln20_7_fu_1079_p3 = ((icmp_ln19_7_fu_1074_p2[0:0] == 1'b1) ? 32'd255 : 32'd0);

assign select_ln20_8_fu_1161_p3 = ((icmp_ln19_8_fu_1156_p2[0:0] == 1'b1) ? 32'd255 : 32'd0);

assign select_ln20_9_fu_1243_p3 = ((icmp_ln19_9_fu_1238_p2[0:0] == 1'b1) ? 32'd255 : 32'd0);

assign select_ln20_fu_505_p3 = ((icmp_ln19_fu_500_p2[0:0] == 1'b1) ? 32'd255 : 32'd0);

assign sext_ln19_1_fu_537_p1 = $signed(trunc_ln19_1_fu_527_p4);

assign sext_ln19_2_fu_619_p1 = $signed(trunc_ln19_2_fu_609_p4);

assign sext_ln19_3_fu_701_p1 = $signed(trunc_ln19_3_fu_691_p4);

assign sext_ln19_4_fu_783_p1 = $signed(trunc_ln19_4_fu_773_p4);

assign sext_ln19_5_fu_865_p1 = $signed(trunc_ln19_5_fu_855_p4);

assign sext_ln19_6_fu_947_p1 = $signed(trunc_ln19_6_fu_937_p4);

assign sext_ln19_7_fu_1029_p1 = $signed(trunc_ln19_7_fu_1019_p4);

assign sext_ln19_8_fu_1111_p1 = $signed(trunc_ln19_8_fu_1101_p4);

assign sext_ln19_9_fu_1193_p1 = $signed(trunc_ln19_9_fu_1183_p4);

assign sext_ln19_fu_449_p1 = $signed(trunc_ln_fu_439_p4);

assign sext_ln20_1_fu_562_p1 = $signed(trunc_ln20_1_fu_552_p4);

assign sext_ln20_2_fu_644_p1 = $signed(trunc_ln20_2_fu_634_p4);

assign sext_ln20_3_fu_726_p1 = $signed(trunc_ln20_3_fu_716_p4);

assign sext_ln20_4_fu_808_p1 = $signed(trunc_ln20_4_fu_798_p4);

assign sext_ln20_5_fu_890_p1 = $signed(trunc_ln20_5_fu_880_p4);

assign sext_ln20_6_fu_972_p1 = $signed(trunc_ln20_6_fu_962_p4);

assign sext_ln20_7_fu_1054_p1 = $signed(trunc_ln20_7_fu_1044_p4);

assign sext_ln20_8_fu_1136_p1 = $signed(trunc_ln20_8_fu_1126_p4);

assign sext_ln20_9_fu_1218_p1 = $signed(trunc_ln20_9_fu_1208_p4);

assign sext_ln20_fu_474_p1 = $signed(trunc_ln1_fu_464_p4);

assign shl_ln_fu_422_p3 = {{ap_phi_mux_i_phi_fu_408_p4}, {2'd0}};

assign trunc_ln19_1_fu_527_p4 = {{add_ln19_1_fu_522_p2[63:2]}};

assign trunc_ln19_2_fu_609_p4 = {{add_ln19_3_fu_604_p2[63:2]}};

assign trunc_ln19_3_fu_691_p4 = {{add_ln19_5_fu_686_p2[63:2]}};

assign trunc_ln19_4_fu_773_p4 = {{add_ln19_7_fu_768_p2[63:2]}};

assign trunc_ln19_5_fu_855_p4 = {{add_ln19_9_fu_850_p2[63:2]}};

assign trunc_ln19_6_fu_937_p4 = {{add_ln19_11_fu_932_p2[63:2]}};

assign trunc_ln19_7_fu_1019_p4 = {{add_ln19_13_fu_1014_p2[63:2]}};

assign trunc_ln19_8_fu_1101_p4 = {{add_ln19_15_fu_1096_p2[63:2]}};

assign trunc_ln19_9_fu_1183_p4 = {{add_ln19_17_fu_1178_p2[63:2]}};

assign trunc_ln1_fu_464_p4 = {{empty_17_fu_459_p2[63:2]}};

assign trunc_ln20_1_fu_552_p4 = {{empty_18_fu_547_p2[63:2]}};

assign trunc_ln20_2_fu_634_p4 = {{empty_19_fu_629_p2[63:2]}};

assign trunc_ln20_3_fu_716_p4 = {{empty_20_fu_711_p2[63:2]}};

assign trunc_ln20_4_fu_798_p4 = {{empty_21_fu_793_p2[63:2]}};

assign trunc_ln20_5_fu_880_p4 = {{empty_22_fu_875_p2[63:2]}};

assign trunc_ln20_6_fu_962_p4 = {{empty_23_fu_957_p2[63:2]}};

assign trunc_ln20_7_fu_1044_p4 = {{empty_24_fu_1039_p2[63:2]}};

assign trunc_ln20_8_fu_1126_p4 = {{empty_25_fu_1121_p2[63:2]}};

assign trunc_ln20_9_fu_1208_p4 = {{empty_26_fu_1203_p2[63:2]}};

assign trunc_ln_fu_439_p4 = {{add_ln19_fu_434_p2[63:2]}};

assign zext_ln19_1_fu_518_p1 = or_ln19_fu_513_p2;

assign zext_ln19_2_fu_600_p1 = add_ln19_2_fu_595_p2;

assign zext_ln19_3_fu_682_p1 = add_ln19_4_fu_677_p2;

assign zext_ln19_4_fu_764_p1 = add_ln19_6_fu_759_p2;

assign zext_ln19_5_fu_846_p1 = add_ln19_8_fu_841_p2;

assign zext_ln19_6_fu_928_p1 = add_ln19_10_fu_923_p2;

assign zext_ln19_7_fu_1010_p1 = add_ln19_12_fu_1005_p2;

assign zext_ln19_8_fu_1092_p1 = add_ln19_14_fu_1087_p2;

assign zext_ln19_9_fu_1174_p1 = add_ln19_16_fu_1169_p2;

assign zext_ln19_fu_430_p1 = shl_ln_fu_422_p3;

always @ (posedge ap_clk) begin
    shl_ln_reg_1283[1:0] <= 2'b00;
    shl_ln_reg_1283_pp0_iter1_reg[1:0] <= 2'b00;
    shl_ln_reg_1283_pp0_iter2_reg[1:0] <= 2'b00;
    shl_ln_reg_1283_pp0_iter3_reg[1:0] <= 2'b00;
    shl_ln_reg_1283_pp0_iter4_reg[1:0] <= 2'b00;
    shl_ln_reg_1283_pp0_iter5_reg[1:0] <= 2'b00;
    shl_ln_reg_1283_pp0_iter6_reg[1:0] <= 2'b00;
    shl_ln_reg_1283_pp0_iter7_reg[1:0] <= 2'b00;
    shl_ln_reg_1283_pp0_iter8_reg[1:0] <= 2'b00;
    shl_ln_reg_1283_pp0_iter9_reg[1:0] <= 2'b00;
    shl_ln_reg_1283_pp0_iter10_reg[1:0] <= 2'b00;
    shl_ln_reg_1283_pp0_iter11_reg[1:0] <= 2'b00;
    shl_ln_reg_1283_pp0_iter12_reg[1:0] <= 2'b00;
    shl_ln_reg_1283_pp0_iter13_reg[1:0] <= 2'b00;
    select_ln20_reg_1318[31:8] <= 24'b000000000000000000000000;
    select_ln20_1_reg_1340[31:8] <= 24'b000000000000000000000000;
    select_ln20_2_reg_1362[31:8] <= 24'b000000000000000000000000;
    select_ln20_3_reg_1384[31:8] <= 24'b000000000000000000000000;
    select_ln20_4_reg_1406[31:8] <= 24'b000000000000000000000000;
    select_ln20_5_reg_1428[31:8] <= 24'b000000000000000000000000;
    select_ln20_6_reg_1450[31:8] <= 24'b000000000000000000000000;
    select_ln20_7_reg_1472[31:8] <= 24'b000000000000000000000000;
    select_ln20_8_reg_1494[31:8] <= 24'b000000000000000000000000;
    select_ln20_9_reg_1516[31:8] <= 24'b000000000000000000000000;
end
>>>>>>> cf5dd79afe81a371ef9c7f2b2ec20459fa39e383

endmodule //image_processing
